{"ast":null,"code":"const imageCache={};export async function drawGraphic(ctx,graphic){ctx.clearRect(0,0,ctx.canvas.width,ctx.canvas.height);ctx.beginPath();ctx.fillStyle=\"green\";switch(graphic.heads[0].value){case\"ellipse\":{const[,x,y,xRadius,yRadius,color]=graphic.heads;ctx.fillStyle=color.value;ctx.ellipse(x.value,y.value,xRadius.value,yRadius.value,0,0,2*Math.PI);break;}case\"rectangle\":{const[,x,y,width,height,color]=graphic.heads;ctx.fillStyle=color.value;ctx.rect(x.value,y.value,width.value,height.value);break;}case\"image\":{const[,url,x,y]=graphic.heads;if(!imageCache[url.value]){const imageBlob=await(await fetch(url.value)).blob();imageCache[url.value]=await createImageBitmap(imageBlob);}ctx.drawImage(imageCache[url.value],x.value,y.value);}}ctx.fill();}","map":{"version":3,"names":["imageCache","drawGraphic","ctx","graphic","clearRect","canvas","width","height","beginPath","fillStyle","heads","value","x","y","xRadius","yRadius","color","ellipse","Math","PI","rect","url","imageBlob","fetch","blob","createImageBitmap","drawImage","fill"],"sources":["/Users/hamzashahzad/Desktop/resume_projects/sparkground/src/evaluator/graphics.ts"],"sourcesContent":["import { NumberDatum, StringDatum } from \"../datum/datum\";\n\nexport type GraphicValue = {\n  kind: \"List\";\n  heads: EllipseGraphic | RectangleGraphic | ImageGraphic;\n};\n\ntype EllipseGraphic = [\n  tag: { kind: \"Symbol\"; value: \"ellipse\" },\n  x: NumberDatum,\n  y: NumberDatum,\n  xRadius: NumberDatum,\n  rRadius: NumberDatum,\n  color: StringDatum,\n];\ntype RectangleGraphic = [\n  tag: { kind: \"Symbol\"; value: \"rectangle\" },\n  x: NumberDatum,\n  y: NumberDatum,\n  width: NumberDatum,\n  height: NumberDatum,\n  color: StringDatum,\n];\ntype ImageGraphic = [\n  tag: { kind: \"Symbol\"; value: \"image\" },\n  url: StringDatum,\n  x: NumberDatum,\n  y: NumberDatum,\n];\n\nconst imageCache: Record<string, ImageBitmap> = {};\n\nexport async function drawGraphic(ctx: CanvasRenderingContext2D, graphic: GraphicValue) {\n  ctx.clearRect(0, 0, ctx.canvas.width, ctx.canvas.height);\n\n  ctx.beginPath();\n  ctx.fillStyle = \"green\";\n\n  switch (graphic.heads[0].value) {\n    case \"ellipse\": {\n      const [, x, y, xRadius, yRadius, color] = graphic.heads as EllipseGraphic;\n      ctx.fillStyle = color.value;\n      ctx.ellipse(x.value, y.value, xRadius.value, yRadius.value, 0, 0, 2 * Math.PI);\n      break;\n    }\n    case \"rectangle\": {\n      const [, x, y, width, height, color] = graphic.heads as RectangleGraphic;\n      ctx.fillStyle = color.value;\n      ctx.rect(x.value, y.value, width.value, height.value);\n      break;\n    }\n    case \"image\": {\n      const [, url, x, y] = graphic.heads as ImageGraphic;\n\n      if (!imageCache[url.value]) {\n        const imageBlob = await (await fetch(url.value)).blob();\n        imageCache[url.value] = await createImageBitmap(imageBlob);\n      }\n\n      ctx.drawImage(imageCache[url.value]!, x.value, y.value);\n    }\n  }\n\n  ctx.fill();\n}\n"],"mappings":"AA8BA,KAAM,CAAAA,UAAuC,CAAG,CAAC,CAAC,CAElD,MAAO,eAAe,CAAAC,WAAWA,CAACC,GAA6B,CAAEC,OAAqB,CAAE,CACtFD,GAAG,CAACE,SAAS,CAAC,CAAC,CAAE,CAAC,CAAEF,GAAG,CAACG,MAAM,CAACC,KAAK,CAAEJ,GAAG,CAACG,MAAM,CAACE,MAAM,CAAC,CAExDL,GAAG,CAACM,SAAS,CAAC,CAAC,CACfN,GAAG,CAACO,SAAS,CAAG,OAAO,CAEvB,OAAQN,OAAO,CAACO,KAAK,CAAC,CAAC,CAAC,CAACC,KAAK,EAC5B,IAAK,SAAS,CAAE,CACd,KAAM,EAAGC,CAAC,CAAEC,CAAC,CAAEC,OAAO,CAAEC,OAAO,CAAEC,KAAK,CAAC,CAAGb,OAAO,CAACO,KAAuB,CACzER,GAAG,CAACO,SAAS,CAAGO,KAAK,CAACL,KAAK,CAC3BT,GAAG,CAACe,OAAO,CAACL,CAAC,CAACD,KAAK,CAAEE,CAAC,CAACF,KAAK,CAAEG,OAAO,CAACH,KAAK,CAAEI,OAAO,CAACJ,KAAK,CAAE,CAAC,CAAE,CAAC,CAAE,CAAC,CAAGO,IAAI,CAACC,EAAE,CAAC,CAC9E,MACF,CACA,IAAK,WAAW,CAAE,CAChB,KAAM,EAAGP,CAAC,CAAEC,CAAC,CAAEP,KAAK,CAAEC,MAAM,CAAES,KAAK,CAAC,CAAGb,OAAO,CAACO,KAAyB,CACxER,GAAG,CAACO,SAAS,CAAGO,KAAK,CAACL,KAAK,CAC3BT,GAAG,CAACkB,IAAI,CAACR,CAAC,CAACD,KAAK,CAAEE,CAAC,CAACF,KAAK,CAAEL,KAAK,CAACK,KAAK,CAAEJ,MAAM,CAACI,KAAK,CAAC,CACrD,MACF,CACA,IAAK,OAAO,CAAE,CACZ,KAAM,EAAGU,GAAG,CAAET,CAAC,CAAEC,CAAC,CAAC,CAAGV,OAAO,CAACO,KAAqB,CAEnD,GAAI,CAACV,UAAU,CAACqB,GAAG,CAACV,KAAK,CAAC,CAAE,CAC1B,KAAM,CAAAW,SAAS,CAAG,KAAM,CAAC,KAAM,CAAAC,KAAK,CAACF,GAAG,CAACV,KAAK,CAAC,EAAEa,IAAI,CAAC,CAAC,CACvDxB,UAAU,CAACqB,GAAG,CAACV,KAAK,CAAC,CAAG,KAAM,CAAAc,iBAAiB,CAACH,SAAS,CAAC,CAC5D,CAEApB,GAAG,CAACwB,SAAS,CAAC1B,UAAU,CAACqB,GAAG,CAACV,KAAK,CAAC,CAAGC,CAAC,CAACD,KAAK,CAAEE,CAAC,CAACF,KAAK,CAAC,CACzD,CACF,CAEAT,GAAG,CAACyB,IAAI,CAAC,CAAC,CACZ","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}