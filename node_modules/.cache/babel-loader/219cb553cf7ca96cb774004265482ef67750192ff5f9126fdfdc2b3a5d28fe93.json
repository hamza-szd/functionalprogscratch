{"ast":null,"code":"export function datumEqual(left,right){if(left.kind!==right.kind)return false;switch(left.kind){case\"Boolean\":case\"Number\":case\"String\":case\"Symbol\":return left.value===right.value;case\"List\":{const leftFlat=partialFlattenList(left);const rightFlat=partialFlattenList(left);return leftFlat.heads.length===rightFlat.heads.length&&leftFlat.heads.every((_,i)=>datumEqual(leftFlat.heads[i],rightFlat.heads[i]))&&(leftFlat.tail===undefined&&rightFlat.tail===undefined||leftFlat.tail!==undefined&&rightFlat.tail!==undefined&&datumEqual(leftFlat.tail,rightFlat.tail));}default:return left===right;}}export function partialFlattenList(list){const heads=[...list.heads];while(((_list$tail=list.tail)===null||_list$tail===void 0?void 0:_list$tail.kind)===\"List\"){var _list$tail;list=list.tail;heads.push(...list.heads);}const tail=list.tail;return{kind:\"List\",heads,tail};}","map":{"version":3,"names":["datumEqual","left","right","kind","value","leftFlat","partialFlattenList","rightFlat","heads","length","every","_","i","tail","undefined","list","_list$tail","push"],"sources":["/Users/hamzashahzad/Desktop/resume_projects/sparkground/src/datum/equality.ts"],"sourcesContent":["import { Datum, ListDatum } from \"./datum\";\nimport { Value, ListValue } from \"../evaluator/value\";\n\nexport function datumEqual(left: Datum | Value, right: Datum | Value): boolean {\n  if (left.kind !== right.kind) return false;\n  switch (left.kind) {\n    case \"Boolean\":\n    case \"Number\":\n    case \"String\":\n    case \"Symbol\":\n      return left.value === (right as any).value;\n\n    case \"List\": {\n      const leftFlat = partialFlattenList(left);\n      const rightFlat = partialFlattenList(left);\n\n      return (\n        leftFlat.heads.length === rightFlat.heads.length &&\n        leftFlat.heads.every((_, i) => datumEqual(leftFlat.heads[i]!, rightFlat.heads[i]!)) &&\n        ((leftFlat.tail === undefined && rightFlat.tail === undefined) ||\n          (leftFlat.tail !== undefined &&\n            rightFlat.tail !== undefined &&\n            datumEqual(leftFlat.tail, rightFlat.tail)))\n      );\n    }\n\n    default:\n      return left === right;\n  }\n}\n\nexport function partialFlattenList(list: ListDatum | ListValue): ListDatum | ListValue {\n  const heads = [...list.heads];\n  while (list.tail?.kind === \"List\") {\n    list = list.tail;\n    heads.push(...list.heads);\n  }\n\n  const tail = list.tail;\n  return {\n    kind: \"List\",\n    heads,\n    tail,\n  };\n}\n"],"mappings":"AAGA,MAAO,SAAS,CAAAA,UAAUA,CAACC,IAAmB,CAAEC,KAAoB,CAAW,CAC7E,GAAID,IAAI,CAACE,IAAI,GAAKD,KAAK,CAACC,IAAI,CAAE,MAAO,MAAK,CAC1C,OAAQF,IAAI,CAACE,IAAI,EACf,IAAK,SAAS,CACd,IAAK,QAAQ,CACb,IAAK,QAAQ,CACb,IAAK,QAAQ,CACX,MAAO,CAAAF,IAAI,CAACG,KAAK,GAAMF,KAAK,CAASE,KAAK,CAE5C,IAAK,MAAM,CAAE,CACX,KAAM,CAAAC,QAAQ,CAAGC,kBAAkB,CAACL,IAAI,CAAC,CACzC,KAAM,CAAAM,SAAS,CAAGD,kBAAkB,CAACL,IAAI,CAAC,CAE1C,MACE,CAAAI,QAAQ,CAACG,KAAK,CAACC,MAAM,GAAKF,SAAS,CAACC,KAAK,CAACC,MAAM,EAChDJ,QAAQ,CAACG,KAAK,CAACE,KAAK,CAAC,CAACC,CAAC,CAAEC,CAAC,GAAKZ,UAAU,CAACK,QAAQ,CAACG,KAAK,CAACI,CAAC,CAAC,CAAGL,SAAS,CAACC,KAAK,CAACI,CAAC,CAAE,CAAC,CAAC,GACjFP,QAAQ,CAACQ,IAAI,GAAKC,SAAS,EAAIP,SAAS,CAACM,IAAI,GAAKC,SAAS,EAC1DT,QAAQ,CAACQ,IAAI,GAAKC,SAAS,EAC1BP,SAAS,CAACM,IAAI,GAAKC,SAAS,EAC5Bd,UAAU,CAACK,QAAQ,CAACQ,IAAI,CAAEN,SAAS,CAACM,IAAI,CAAE,CAAC,CAEnD,CAEA,QACE,MAAO,CAAAZ,IAAI,GAAKC,KAAK,CACzB,CACF,CAEA,MAAO,SAAS,CAAAI,kBAAkBA,CAACS,IAA2B,CAAyB,CACrF,KAAM,CAAAP,KAAK,CAAG,CAAC,GAAGO,IAAI,CAACP,KAAK,CAAC,CAC7B,MAAO,EAAAQ,UAAA,CAAAD,IAAI,CAACF,IAAI,UAAAG,UAAA,iBAATA,UAAA,CAAWb,IAAI,IAAK,MAAM,CAAE,KAAAa,UAAA,CACjCD,IAAI,CAAGA,IAAI,CAACF,IAAI,CAChBL,KAAK,CAACS,IAAI,CAAC,GAAGF,IAAI,CAACP,KAAK,CAAC,CAC3B,CAEA,KAAM,CAAAK,IAAI,CAAGE,IAAI,CAACF,IAAI,CACtB,MAAO,CACLV,IAAI,CAAE,MAAM,CACZK,KAAK,CACLK,IACF,CAAC,CACH","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}