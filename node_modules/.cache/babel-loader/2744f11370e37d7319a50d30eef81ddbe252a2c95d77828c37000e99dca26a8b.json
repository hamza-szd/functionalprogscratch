{"ast":null,"code":"import _classPrivateFieldLooseBase from\"/Users/hamzashahzad/Desktop/resume_projects/sparkground/node_modules/@babel/runtime/helpers/esm/classPrivateFieldLooseBase.js\";import _classPrivateFieldLooseKey from\"/Users/hamzashahzad/Desktop/resume_projects/sparkground/node_modules/@babel/runtime/helpers/esm/classPrivateFieldLooseKey.js\";import{extendIndexPath,hole,isHole,nodeAtIndexPath}from\"./tree\";import BlockHint from\"../blocks/BlockHint\";import Block from\"../blocks/Block\";import{memo}from\"react\";import{extendEnv}from\"../library/environments\";import{functionMinArgCount,hasTag,isForallType,isTypeNameBinding,isTypeNameHole,isTypeVar,typeParams}from\"../../typechecker/type\";import{jsx as _jsx,Fragment as _Fragment,jsxs as _jsxs}from\"react/jsx-runtime\";const BlockMemo=/*#__PURE__*/memo(Block);var _renderExpr=/*#__PURE__*/_classPrivateFieldLooseKey(\"renderExpr\");var _block=/*#__PURE__*/_classPrivateFieldLooseKey(\"block\");var _renderVarSlot=/*#__PURE__*/_classPrivateFieldLooseKey(\"renderVarSlot\");var _renderSubexpr=/*#__PURE__*/_classPrivateFieldLooseKey(\"renderSubexpr\");var _renderDatum=/*#__PURE__*/_classPrivateFieldLooseKey(\"renderDatum\");var _renderSubdatum=/*#__PURE__*/_classPrivateFieldLooseKey(\"renderSubdatum\");var _renderType=/*#__PURE__*/_classPrivateFieldLooseKey(\"renderType\");var _renderTypeArg=/*#__PURE__*/_classPrivateFieldLooseKey(\"renderTypeArg\");var _renderIdentifier=/*#__PURE__*/_classPrivateFieldLooseKey(\"renderIdentifier\");var _renderTypeVarSlot=/*#__PURE__*/_classPrivateFieldLooseKey(\"renderTypeVarSlot\");var _renderNameBinding=/*#__PURE__*/_classPrivateFieldLooseKey(\"renderNameBinding\");var _hintBodyArgs=/*#__PURE__*/_classPrivateFieldLooseKey(\"hintBodyArgs\");var _renderCall=/*#__PURE__*/_classPrivateFieldLooseKey(\"renderCall\");var _renderStruct=/*#__PURE__*/_classPrivateFieldLooseKey(\"renderStruct\");var _renderDefine=/*#__PURE__*/_classPrivateFieldLooseKey(\"renderDefine\");var _renderLet=/*#__PURE__*/_classPrivateFieldLooseKey(\"renderLet\");var _renderLetrec=/*#__PURE__*/_classPrivateFieldLooseKey(\"renderLetrec\");var _renderLambda=/*#__PURE__*/_classPrivateFieldLooseKey(\"renderLambda\");var _renderSequence=/*#__PURE__*/_classPrivateFieldLooseKey(\"renderSequence\");var _renderAndOr=/*#__PURE__*/_classPrivateFieldLooseKey(\"renderAndOr\");var _renderIf=/*#__PURE__*/_classPrivateFieldLooseKey(\"renderIf\");var _keyForIndexPath=/*#__PURE__*/_classPrivateFieldLooseKey(\"keyForIndexPath\");var _extendedEnvironment=/*#__PURE__*/_classPrivateFieldLooseKey(\"extendedEnvironment\");export class Renderer{constructor(environment,typechecker,editor){let options=arguments.length>3&&arguments[3]!==undefined?arguments[3]:{};this.environment=environment;this.typechecker=typechecker;this.editor=editor;Object.defineProperty(this,_extendedEnvironment,{value:_extendedEnvironment2});Object.defineProperty(this,_keyForIndexPath,{value:_keyForIndexPath2});Object.defineProperty(this,_renderIf,{value:_renderIf2});Object.defineProperty(this,_renderAndOr,{value:_renderAndOr2});Object.defineProperty(this,_renderSequence,{value:_renderSequence2});Object.defineProperty(this,_renderLambda,{value:_renderLambda2});Object.defineProperty(this,_renderLetrec,{value:_renderLetrec2});Object.defineProperty(this,_renderLet,{value:_renderLet2});Object.defineProperty(this,_renderDefine,{value:_renderDefine2});Object.defineProperty(this,_renderStruct,{value:_renderStruct2});Object.defineProperty(this,_renderCall,{value:_renderCall2});Object.defineProperty(this,_hintBodyArgs,{value:_hintBodyArgs2});Object.defineProperty(this,_renderNameBinding,{value:_renderNameBinding2});Object.defineProperty(this,_renderTypeVarSlot,{value:_renderTypeVarSlot2});Object.defineProperty(this,_renderIdentifier,{value:_renderIdentifier2});Object.defineProperty(this,_renderTypeArg,{value:_renderTypeArg2});Object.defineProperty(this,_renderType,{value:_renderType2});Object.defineProperty(this,_renderSubdatum,{value:_renderSubdatum2});Object.defineProperty(this,_renderDatum,{value:_renderDatum2});Object.defineProperty(this,_renderSubexpr,{value:_renderSubexpr2});Object.defineProperty(this,_renderVarSlot,{value:_renderVarSlot2});Object.defineProperty(this,_block,{value:_block2});Object.defineProperty(this,_renderExpr,{value:_renderExpr2});this.indexPath=void 0;this.isCopySource=void 0;this.forDragOverlay=void 0;this.onEditValue=void 0;this.forDragOverlay=options.forDragOverlay;this.onEditValue=options.onEditValue;}render(indexPath){let{isCopySource}=arguments.length>1&&arguments[1]!==undefined?arguments[1]:{};this.indexPath=indexPath;if(isCopySource)this.isCopySource=isCopySource;this.typechecker.clearCache();this.typechecker.inferType(indexPath.tree);const node=nodeAtIndexPath(indexPath);switch(node.kind){case\"Boolean\":case\"Number\":case\"String\":case\"Symbol\":case\"List\":return _classPrivateFieldLooseBase(this,_renderDatum)[_renderDatum](node);default:return _classPrivateFieldLooseBase(this,_renderExpr)[_renderExpr](node);}}}function _renderExpr2(expr){switch(expr.kind){case\"Number\":case\"Boolean\":case\"String\":case\"Symbol\":case\"List\":return _classPrivateFieldLooseBase(this,_renderDatum)[_renderDatum](expr);case\"type\":return _classPrivateFieldLooseBase(this,_renderType)[_renderType](expr.type);case\"name-binding\":case\"var\":return _classPrivateFieldLooseBase(this,_renderIdentifier)[_renderIdentifier](expr);case\"call\":return _classPrivateFieldLooseBase(this,_renderCall)[_renderCall](expr);case\"struct\":return _classPrivateFieldLooseBase(this,_renderStruct)[_renderStruct](expr);case\"define\":return _classPrivateFieldLooseBase(this,_renderDefine)[_renderDefine](expr);case\"let\":return _classPrivateFieldLooseBase(this,_renderLet)[_renderLet](expr);case\"letrec\":return _classPrivateFieldLooseBase(this,_renderLetrec)[_renderLetrec](expr);case\"lambda\":return _classPrivateFieldLooseBase(this,_renderLambda)[_renderLambda](expr);case\"sequence\":return _classPrivateFieldLooseBase(this,_renderSequence)[_renderSequence](expr);case\"and\":case\"or\":return _classPrivateFieldLooseBase(this,_renderAndOr)[_renderAndOr](expr);case\"if\":return _classPrivateFieldLooseBase(this,_renderIf)[_renderIf](expr);case\"cond\":throw\"TODO\";}}function _block2(data){var _binding$attributes;let body=arguments.length>1&&arguments[1]!==undefined?arguments[1]:[];const key=_classPrivateFieldLooseBase(this,_keyForIndexPath)[_keyForIndexPath](this.indexPath);const binding=\"binding\"in data?data.binding:undefined;return/*#__PURE__*/_jsx(BlockMemo,{id:key,indexPath:this.indexPath,data:data,isCopySource:this.isCopySource,typechecker:this.typechecker,editor:this.editor,identifierTag:binding!==null&&binding!==void 0&&(_binding$attributes=binding.attributes)!==null&&_binding$attributes!==void 0&&_binding$attributes.binder?_classPrivateFieldLooseBase(this,_keyForIndexPath)[_keyForIndexPath](binding.attributes.binder).trim().replace(/\\s/g,\"-\").trim():binding!==null&&binding!==void 0&&binding.name?`global-${binding.name}`:undefined,forDragOverlay:this.forDragOverlay,onEditValue:this.onEditValue,children:body},key);}function _renderVarSlot2(varSlot,index){let{environment,phantom}=arguments.length>2&&arguments[2]!==undefined?arguments[2]:{};const parentIndexPath=this.indexPath;const parentIsCopySource=this.isCopySource;const parentEnvironment=this.environment;this.indexPath=extendIndexPath(this.indexPath,index);this.isCopySource=true;this.environment=environment!==null&&environment!==void 0?environment:this.environment;const rendered=isHole(varSlot)?_classPrivateFieldLooseBase(this,_block)[_block]({type:\"name-hole\",phantom}):_classPrivateFieldLooseBase(this,_renderNameBinding)[_renderNameBinding](varSlot);this.indexPath=parentIndexPath;this.isCopySource=parentIsCopySource;this.environment=parentEnvironment;return rendered;}function _renderSubexpr2(subexpr,index){let{isCopySource,environment}=arguments.length>2&&arguments[2]!==undefined?arguments[2]:{};const parentIndexPath=this.indexPath;const parentIsCopySource=this.isCopySource;const parentEnvironment=this.environment;this.indexPath=extendIndexPath(this.indexPath,index);this.isCopySource=this.isCopySource||isCopySource;this.environment=environment!==null&&environment!==void 0?environment:this.environment;const rendered=_classPrivateFieldLooseBase(this,_renderExpr)[_renderExpr](subexpr);this.indexPath=parentIndexPath;this.isCopySource=parentIsCopySource;this.environment=parentEnvironment;return rendered;}function _renderDatum2(datum){switch(datum.kind){case\"Boolean\":return _classPrivateFieldLooseBase(this,_block)[_block]({type:\"bool\",value:datum.value});case\"Number\":return _classPrivateFieldLooseBase(this,_block)[_block]({type:\"number\",value:datum.value});case\"String\":return _classPrivateFieldLooseBase(this,_block)[_block]({type:\"string\",value:datum.value});case\"Symbol\":if(datum.value===\"Â·\")return _classPrivateFieldLooseBase(this,_block)[_block]({type:\"hole\"});return _classPrivateFieldLooseBase(this,_block)[_block]({type:\"symbol\",id:datum.value});case\"List\":const heads=datum.heads;// Remove holes from the end\nwhile(isHole(heads.at(-1))){heads.pop();}const children=heads.map((head,index)=>_classPrivateFieldLooseBase(this,_renderSubdatum)[_renderSubdatum](head,index+1));const tail=datum.tail?_classPrivateFieldLooseBase(this,_renderSubdatum)[_renderSubdatum](datum.tail,0):undefined;return _classPrivateFieldLooseBase(this,_block)[_block]({type:\"hlist\",tail},children);}}function _renderSubdatum2(subdatum,index){let{isCopySource}=arguments.length>2&&arguments[2]!==undefined?arguments[2]:{};const parentIndexPath=this.indexPath;const parentIsCopySource=this.isCopySource;this.indexPath=extendIndexPath(this.indexPath,index);this.isCopySource=this.isCopySource||isCopySource;const rendered=_classPrivateFieldLooseBase(this,_renderDatum)[_renderDatum](subdatum);this.indexPath=parentIndexPath;this.isCopySource=parentIsCopySource;return rendered;}function _renderType2(type){if(isTypeVar(type)){return _classPrivateFieldLooseBase(this,_block)[_block]({type:\"type-var\",id:type.var});}else if(isTypeNameBinding(type)){// Rendered standalone, this is a *drag overlay* for a type name binding\nreturn _classPrivateFieldLooseBase(this,_block)[_block]({type:\"type-var\",id:type.id});}else if(isTypeNameHole(type)){return _classPrivateFieldLooseBase(this,_block)[_block]({type:\"type-name-hole\"});}else if(isForallType(type)){// TODO: Render something different?\nreturn _classPrivateFieldLooseBase(this,_block)[_block]({type:\"type\",id:\"All\"},[...type.forall.map((typeVar,index)=>_classPrivateFieldLooseBase(this,_renderTypeVarSlot)[_renderTypeVarSlot](typeVar,index)),_classPrivateFieldLooseBase(this,_renderTypeArg)[_renderTypeArg](type.body,type.forall.length)]);}else{const renderedArgs=typeParams(type).map((typeArg,index)=>_classPrivateFieldLooseBase(this,_renderTypeArg)[_renderTypeArg](typeArg,index));if(hasTag(type,\"Function\")){// Infix notation\nrenderedArgs.splice(renderedArgs.length-1,0,/*#__PURE__*/_jsx(\"div\",{className:\"block-type-label block-type-label-arrow\",children:\"\\u279C\"}));}return _classPrivateFieldLooseBase(this,_block)[_block]({type:\"type\",id:type.tag},renderedArgs);}}function _renderTypeArg2(typeArg,index){const parentIndexPath=this.indexPath;const parentIsCopySource=this.isCopySource;this.indexPath=extendIndexPath(this.indexPath,index);this.isCopySource=false;const rendered=_classPrivateFieldLooseBase(this,_renderType)[_renderType](typeArg);this.indexPath=parentIndexPath;this.isCopySource=parentIsCopySource;return rendered;}function _renderIdentifier2(expr){return _classPrivateFieldLooseBase(this,_block)[_block]({type:\"ident\",id:expr.id,binding:this.environment[expr.id]});}function _renderTypeVarSlot2(typeVarSlot,index){const parentIndexPath=this.indexPath;const parentIsCopySource=this.isCopySource;this.indexPath=extendIndexPath(this.indexPath,index);this.isCopySource=true;const rendered=isTypeNameHole(typeVarSlot)?_classPrivateFieldLooseBase(this,_block)[_block]({type:\"type-name-hole\"}):_classPrivateFieldLooseBase(this,_block)[_block]({type:\"type-name-binding\",id:typeVarSlot.id});this.indexPath=parentIndexPath;this.isCopySource=parentIsCopySource;return rendered;}function _renderNameBinding2(nb){const{id}=nb;const binding=this.environment[id];const body=nb.type?/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(\"span\",{style:{marginLeft:\"-0.2em\",marginRight:\"-0.05em\"},children:\":\"}),_classPrivateFieldLooseBase(this,_renderTypeArg)[_renderTypeArg](nb.type,0)]}):/*#__PURE__*/_jsx(_Fragment,{});return _classPrivateFieldLooseBase(this,_block)[_block]({type:\"name-binding\",id,binding},body);}function _hintBodyArgs2(bodyArgs){let hints=arguments.length>1&&arguments[1]!==undefined?arguments[1]:[];return bodyArgs.map((bodyArg,index)=>{const hint=hints[index];if(!hint)return bodyArg;const argIndexPath=extendIndexPath(this.indexPath,index);return/*#__PURE__*/_jsx(BlockHint,{hint:hint,children:bodyArg},_classPrivateFieldLooseBase(this,_keyForIndexPath)[_keyForIndexPath](argIndexPath));});}function _renderCall2(expr){let{called,args}=expr;if(called.kind===\"var\"){var _functionMinArgCount;const calledType=this.typechecker.inferType(called);const minArgCount=(_functionMinArgCount=functionMinArgCount(calledType))!==null&&_functionMinArgCount!==void 0?_functionMinArgCount:0;// Add holes where arguments are required\nwhile(args.length<minArgCount){args.push(hole);}// Remove holes from the end of varargs calls\nwhile(args.length>minArgCount&&isHole(args.at(-1))){args.pop();}}const renderedArgs=args.map((arg,index)=>_classPrivateFieldLooseBase(this,_renderSubexpr)[_renderSubexpr](arg,index+1));if(called.kind===\"var\"){var _calledBinding$attrib,_calledAttributes$bod;const calledBinding=this.environment[called.id];const calledAttributes=(_calledBinding$attrib=calledBinding===null||calledBinding===void 0?void 0:calledBinding.attributes)!==null&&_calledBinding$attrib!==void 0?_calledBinding$attrib:{};const{headingArgCount,bodyArgHints}=calledAttributes;const heading=headingArgCount?renderedArgs.slice(0,headingArgCount):[];const body=renderedArgs.slice(headingArgCount);if(calledAttributes.hat){return _classPrivateFieldLooseBase(this,_block)[_block]({type:\"hat\",id:called.id,binding:calledBinding,heading:/*#__PURE__*/_jsx(_Fragment,{children:heading}),calledIsVar:true},_classPrivateFieldLooseBase(this,_hintBodyArgs)[_hintBodyArgs](body,bodyArgHints));}else if(calledAttributes.headingArgCount||(_calledAttributes$bod=calledAttributes.bodyArgHints)!==null&&_calledAttributes$bod!==void 0&&_calledAttributes$bod.length){return _classPrivateFieldLooseBase(this,_block)[_block]({type:\"v\",id:called.id,binding:calledBinding,heading:/*#__PURE__*/_jsx(_Fragment,{children:heading}),calledIsVar:true},_classPrivateFieldLooseBase(this,_hintBodyArgs)[_hintBodyArgs](body,bodyArgHints));}else{if(calledAttributes.infix){const argCount=renderedArgs.length;for(let i=0;i<argCount-1;i++){renderedArgs.splice(2*i+1,0,/*#__PURE__*/_jsx(\"div\",{className:\"block-h-label\",children:called.id}));}}return _classPrivateFieldLooseBase(this,_block)[_block]({type:\"h\",id:called.id,binding:calledBinding,calledIsVar:true,argCount:args.length},renderedArgs);}}else{const renderedCalled=_classPrivateFieldLooseBase(this,_renderSubexpr)[_renderSubexpr](called,0);return _classPrivateFieldLooseBase(this,_block)[_block]({type:\"happly\"},[renderedCalled,...renderedArgs]);}}function _renderStruct2(expr){const heading=_classPrivateFieldLooseBase(this,_renderVarSlot)[_renderVarSlot](expr.name,0);const body=/*#__PURE__*/_jsxs(_Fragment,{children:[expr.fields.map((name,index)=>_classPrivateFieldLooseBase(this,_renderVarSlot)[_renderVarSlot](name,index+1)),// Phantom \"+\" button (name hole) at the end\n!this.isCopySource&&!this.forDragOverlay&&_classPrivateFieldLooseBase(this,_renderVarSlot)[_renderVarSlot](hole,expr.fields.length+1,{phantom:true})]});return _classPrivateFieldLooseBase(this,_block)[_block]({type:\"hat\",id:\"structure\",heading},body);}function _renderDefine2(expr){const heading=_classPrivateFieldLooseBase(this,_renderVarSlot)[_renderVarSlot](expr.name,0);const body=_classPrivateFieldLooseBase(this,_renderSubexpr)[_renderSubexpr](expr.value,1);return _classPrivateFieldLooseBase(this,_block)[_block]({type:\"hat\",id:\"define\",heading},body);}function _renderLet2(expr){const newEnvironment=_classPrivateFieldLooseBase(this,_extendedEnvironment)[_extendedEnvironment](expr.bindings.map(_ref=>{let[name]=_ref;return name;}));const heading=/*#__PURE__*/_jsx(_Fragment,{children:expr.bindings.map((_ref2,index)=>{let[name,value]=_ref2;return/*#__PURE__*/_jsxs(_Fragment,{children:[_classPrivateFieldLooseBase(this,_renderVarSlot)[_renderVarSlot](name,2*index,{environment:newEnvironment}),_classPrivateFieldLooseBase(this,_renderSubexpr)[_renderSubexpr](value,2*index+1)]});})});const body=_classPrivateFieldLooseBase(this,_renderSubexpr)[_renderSubexpr](expr.body,2*expr.bindings.length,{environment:newEnvironment});return _classPrivateFieldLooseBase(this,_block)[_block]({type:\"v\",id:\"let\",heading},body);}function _renderLetrec2(expr){const newEnvironment=_classPrivateFieldLooseBase(this,_extendedEnvironment)[_extendedEnvironment](expr.bindings.map(_ref3=>{let[name]=_ref3;return name;}));const heading=/*#__PURE__*/_jsx(_Fragment,{children:expr.bindings.map((_ref4,index)=>{let[name,value]=_ref4;return/*#__PURE__*/_jsxs(_Fragment,{children:[_classPrivateFieldLooseBase(this,_renderVarSlot)[_renderVarSlot](name,2*index,{environment:newEnvironment}),_classPrivateFieldLooseBase(this,_renderSubexpr)[_renderSubexpr](value,2*index+1,{environment:newEnvironment})]});})});const body=_classPrivateFieldLooseBase(this,_renderSubexpr)[_renderSubexpr](expr.body,2*expr.bindings.length,{environment:newEnvironment});return _classPrivateFieldLooseBase(this,_block)[_block]({type:\"v\",id:\"letrec\",heading},body);}function _renderLambda2(expr){const newEnvironment=_classPrivateFieldLooseBase(this,_extendedEnvironment)[_extendedEnvironment](expr.params);const heading=/*#__PURE__*/_jsxs(_Fragment,{children:[// Parameters\nexpr.params.map((param,index)=>_classPrivateFieldLooseBase(this,_renderVarSlot)[_renderVarSlot](param,index,{environment:newEnvironment})),// Phantom \"+\" button (parameter name hole) at the end\n!this.isCopySource&&!this.forDragOverlay&&_classPrivateFieldLooseBase(this,_renderVarSlot)[_renderVarSlot](hole,expr.params.length,{environment:newEnvironment,phantom:true}),// Return type annotation\nexpr.returnType?/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(\"span\",{style:{marginLeft:\"0.5em\",marginRight:\"0.25em\"},children:\"\\u279C\"}),_classPrivateFieldLooseBase(this,_renderTypeArg)[_renderTypeArg](expr.returnType,expr.params.length+1)]}):\"\"]});const body=_classPrivateFieldLooseBase(this,_renderSubexpr)[_renderSubexpr](expr.body,expr.params.length+1,{environment:newEnvironment});return _classPrivateFieldLooseBase(this,_block)[_block]({type:\"v\",id:\"function\",heading,returnTypeAnnotation:expr.returnType},body);}function _renderSequence2(expr){// TODO: Real editable sequence block!\nreturn/*#__PURE__*/_jsx(_Fragment,{children:expr.exprs.map((subexpr,index)=>_classPrivateFieldLooseBase(this,_renderSubexpr)[_renderSubexpr](subexpr,index))});}function _renderAndOr2(expr){const args=expr.args;// Remove holes from the end\nwhile(isHole(args.at(-1))){args.pop();}return _classPrivateFieldLooseBase(this,_block)[_block]({type:\"h\",id:expr.kind},expr.args.map((arg,index)=>_classPrivateFieldLooseBase(this,_renderSubexpr)[_renderSubexpr](arg,index)));}function _renderIf2(expr){return _classPrivateFieldLooseBase(this,_block)[_block]({type:\"v\",id:\"if\",heading:_classPrivateFieldLooseBase(this,_renderSubexpr)[_renderSubexpr](expr.if,0)},_classPrivateFieldLooseBase(this,_hintBodyArgs)[_hintBodyArgs]([_classPrivateFieldLooseBase(this,_renderSubexpr)[_renderSubexpr](expr.then,1),_classPrivateFieldLooseBase(this,_renderSubexpr)[_renderSubexpr](expr.else,2)],[\"then\",\"else\"]));}function _keyForIndexPath2(_ref5){let{tree,path}=_ref5;return tree.id+\" \"+path.join(\" \");}function _extendedEnvironment2(varSlots){return extendEnv(this.environment,this.indexPath,varSlots);}","map":{"version":3,"names":["extendIndexPath","hole","isHole","nodeAtIndexPath","BlockHint","Block","memo","extendEnv","functionMinArgCount","hasTag","isForallType","isTypeNameBinding","isTypeNameHole","isTypeVar","typeParams","jsx","_jsx","Fragment","_Fragment","jsxs","_jsxs","BlockMemo","_renderExpr","_classPrivateFieldLooseKey","_block","_renderVarSlot","_renderSubexpr","_renderDatum","_renderSubdatum","_renderType","_renderTypeArg","_renderIdentifier","_renderTypeVarSlot","_renderNameBinding","_hintBodyArgs","_renderCall","_renderStruct","_renderDefine","_renderLet","_renderLetrec","_renderLambda","_renderSequence","_renderAndOr","_renderIf","_keyForIndexPath","_extendedEnvironment","Renderer","constructor","environment","typechecker","editor","options","arguments","length","undefined","Object","defineProperty","value","_extendedEnvironment2","_keyForIndexPath2","_renderIf2","_renderAndOr2","_renderSequence2","_renderLambda2","_renderLetrec2","_renderLet2","_renderDefine2","_renderStruct2","_renderCall2","_hintBodyArgs2","_renderNameBinding2","_renderTypeVarSlot2","_renderIdentifier2","_renderTypeArg2","_renderType2","_renderSubdatum2","_renderDatum2","_renderSubexpr2","_renderVarSlot2","_block2","_renderExpr2","indexPath","isCopySource","forDragOverlay","onEditValue","render","clearCache","inferType","tree","node","kind","_classPrivateFieldLooseBase","expr","type","data","_binding$attributes","body","key","binding","id","identifierTag","attributes","binder","trim","replace","name","children","varSlot","index","phantom","parentIndexPath","parentIsCopySource","parentEnvironment","rendered","subexpr","datum","heads","at","pop","map","head","tail","subdatum","var","forall","typeVar","renderedArgs","typeArg","splice","className","tag","typeVarSlot","nb","style","marginLeft","marginRight","bodyArgs","hints","bodyArg","hint","argIndexPath","called","args","_functionMinArgCount","calledType","minArgCount","push","arg","_calledBinding$attrib","_calledAttributes$bod","calledBinding","calledAttributes","headingArgCount","bodyArgHints","heading","slice","hat","calledIsVar","infix","argCount","i","renderedCalled","fields","newEnvironment","bindings","_ref","_ref2","_ref3","_ref4","params","param","returnType","returnTypeAnnotation","exprs","if","then","else","_ref5","path","join","varSlots"],"sources":["/Users/hamzashahzad/Desktop/resume_projects/sparkground/src/editor/trees/render.tsx"],"sourcesContent":["import { TreeIndexPath, extendIndexPath, hole, isHole, nodeAtIndexPath } from \"./tree\";\nimport BlockHint from \"../blocks/BlockHint\";\nimport Block, { BlockData } from \"../blocks/Block\";\nimport { Over } from \"@dnd-kit/core\";\nimport {\n  Define,\n  Expr,\n  Hole,\n  If,\n  Lambda,\n  Call,\n  Sequence,\n  Var,\n  Let,\n  NameBinding,\n  Letrec,\n  VarSlot,\n  And,\n  Or,\n  Struct,\n} from \"../../expr/expr\";\nimport { Datum } from \"../../datum/datum\";\nimport { memo } from \"react\";\nimport { Environment, extendEnv } from \"../library/environments\";\nimport {\n  Type,\n  TypeVarSlot,\n  functionMinArgCount,\n  hasTag,\n  isForallType,\n  isTypeNameBinding,\n  isTypeNameHole,\n  isTypeVar,\n  typeParams,\n} from \"../../typechecker/type\";\nimport { Typechecker } from \"../../typechecker/typecheck\";\nimport { Editor } from \"../state/Editor\";\n\nconst BlockMemo = memo(Block);\n\nexport class Renderer {\n  indexPath!: TreeIndexPath;\n  isCopySource?: boolean;\n\n  forDragOverlay?: boolean | Over;\n\n  onEditValue?: (indexPath: TreeIndexPath, applyAsFunction?: boolean) => Promise<void>;\n\n  constructor(\n    private environment: Environment<unknown>,\n    private typechecker: Typechecker,\n    private editor: Editor,\n    options: {\n      forDragOverlay?: boolean | Over;\n      onEditValue?: (indexPath: TreeIndexPath, applyAsFunction?: boolean) => Promise<void>;\n    } = {},\n  ) {\n    this.forDragOverlay = options.forDragOverlay;\n    this.onEditValue = options.onEditValue;\n  }\n\n  render(\n    indexPath: TreeIndexPath,\n    {\n      isCopySource,\n    }: {\n      isCopySource?: boolean;\n    } = {},\n  ) {\n    this.indexPath = indexPath;\n    if (isCopySource) this.isCopySource = isCopySource;\n\n    this.typechecker.clearCache();\n    this.typechecker.inferType(indexPath.tree);\n\n    const node = nodeAtIndexPath(indexPath);\n    switch (node.kind) {\n      case \"Boolean\":\n      case \"Number\":\n      case \"String\":\n      case \"Symbol\":\n      case \"List\":\n        return this.#renderDatum(node);\n      default:\n        return this.#renderExpr(node);\n    }\n  }\n\n  #renderExpr(expr: Expr): JSX.Element {\n    switch (expr.kind) {\n      case \"Number\":\n      case \"Boolean\":\n      case \"String\":\n      case \"Symbol\":\n      case \"List\":\n        return this.#renderDatum(expr);\n\n      case \"type\":\n        return this.#renderType(expr.type);\n\n      case \"name-binding\":\n      case \"var\":\n        return this.#renderIdentifier(expr);\n\n      case \"call\":\n        return this.#renderCall(expr);\n\n      case \"struct\":\n        return this.#renderStruct(expr);\n      case \"define\":\n        return this.#renderDefine(expr);\n      case \"let\":\n        return this.#renderLet(expr);\n      case \"letrec\":\n        return this.#renderLetrec(expr);\n      case \"lambda\":\n        return this.#renderLambda(expr);\n      case \"sequence\":\n        return this.#renderSequence(expr);\n\n      case \"and\":\n      case \"or\":\n        return this.#renderAndOr(expr);\n      case \"if\":\n        return this.#renderIf(expr);\n      case \"cond\":\n        throw \"TODO\";\n    }\n  }\n\n  #block(data: BlockData, body: JSX.Element | JSX.Element[] = []) {\n    const key = this.#keyForIndexPath(this.indexPath);\n\n    const binding = \"binding\" in data ? data.binding : undefined;\n    return (\n      <BlockMemo\n        key={key}\n        id={key}\n        indexPath={this.indexPath}\n        data={data}\n        isCopySource={this.isCopySource}\n        typechecker={this.typechecker}\n        editor={this.editor}\n        identifierTag={\n          binding?.attributes?.binder\n            ? this.#keyForIndexPath(binding.attributes.binder).trim().replace(/\\s/g, \"-\").trim()\n            : binding?.name\n              ? `global-${binding.name}`\n              : undefined\n        }\n        forDragOverlay={this.forDragOverlay}\n        onEditValue={this.onEditValue}\n      >\n        {body}\n      </BlockMemo>\n    );\n  }\n\n  #renderVarSlot(\n    varSlot: VarSlot,\n    index: number,\n    { environment, phantom }: { environment?: Environment<unknown>; phantom?: boolean } = {},\n  ): JSX.Element {\n    const parentIndexPath = this.indexPath;\n    const parentIsCopySource = this.isCopySource;\n    const parentEnvironment = this.environment;\n\n    this.indexPath = extendIndexPath(this.indexPath, index);\n    this.isCopySource = true;\n    this.environment = environment ?? this.environment;\n\n    const rendered = isHole(varSlot)\n      ? this.#block({ type: \"name-hole\", phantom })\n      : this.#renderNameBinding(varSlot);\n\n    this.indexPath = parentIndexPath;\n    this.isCopySource = parentIsCopySource;\n    this.environment = parentEnvironment;\n    return rendered;\n  }\n\n  #renderSubexpr(\n    subexpr: Expr,\n    index: number,\n    {\n      isCopySource,\n      environment,\n    }: { isCopySource?: boolean; environment?: Environment<unknown> } = {},\n  ): JSX.Element {\n    const parentIndexPath = this.indexPath;\n    const parentIsCopySource = this.isCopySource;\n    const parentEnvironment = this.environment;\n\n    this.indexPath = extendIndexPath(this.indexPath, index);\n    this.isCopySource = this.isCopySource || isCopySource;\n    this.environment = environment ?? this.environment;\n\n    const rendered = this.#renderExpr(subexpr);\n\n    this.indexPath = parentIndexPath;\n    this.isCopySource = parentIsCopySource;\n    this.environment = parentEnvironment;\n    return rendered;\n  }\n\n  #renderDatum(datum: Datum | Hole): JSX.Element {\n    switch (datum.kind) {\n      case \"Boolean\":\n        return this.#block({ type: \"bool\", value: datum.value });\n      case \"Number\":\n        return this.#block({ type: \"number\", value: datum.value });\n      case \"String\":\n        return this.#block({ type: \"string\", value: datum.value });\n      case \"Symbol\":\n        if (datum.value === \"Â·\") return this.#block({ type: \"hole\" });\n        return this.#block({ type: \"symbol\", id: datum.value });\n      case \"List\":\n        const heads = datum.heads;\n        // Remove holes from the end\n        while (isHole(heads.at(-1))) {\n          heads.pop();\n        }\n        const children = heads.map((head, index) => this.#renderSubdatum(head, index + 1));\n\n        const tail = datum.tail ? this.#renderSubdatum(datum.tail, 0) : undefined;\n\n        return this.#block({ type: \"hlist\", tail }, children);\n    }\n  }\n\n  #renderSubdatum(\n    subdatum: Datum,\n    index: number,\n    { isCopySource }: { isCopySource?: boolean } = {},\n  ) {\n    const parentIndexPath = this.indexPath;\n    const parentIsCopySource = this.isCopySource;\n\n    this.indexPath = extendIndexPath(this.indexPath, index);\n    this.isCopySource = this.isCopySource || isCopySource;\n\n    const rendered = this.#renderDatum(subdatum);\n\n    this.indexPath = parentIndexPath;\n    this.isCopySource = parentIsCopySource;\n    return rendered;\n  }\n\n  #renderType(type: Type): JSX.Element {\n    if (isTypeVar(type)) {\n      return this.#block({\n        type: \"type-var\",\n        id: type.var,\n      });\n    } else if (isTypeNameBinding(type)) {\n      // Rendered standalone, this is a *drag overlay* for a type name binding\n      return this.#block({\n        type: \"type-var\",\n        id: type.id,\n      });\n    } else if (isTypeNameHole(type)) {\n      return this.#block({\n        type: \"type-name-hole\",\n      });\n    } else if (isForallType(type)) {\n      // TODO: Render something different?\n      return this.#block(\n        {\n          type: \"type\",\n          id: \"All\",\n        },\n        [\n          ...type.forall.map((typeVar, index) => this.#renderTypeVarSlot(typeVar, index)),\n          this.#renderTypeArg(type.body, type.forall.length),\n        ],\n      );\n    } else {\n      const renderedArgs = typeParams(type).map((typeArg, index) =>\n        this.#renderTypeArg(typeArg, index),\n      );\n\n      if (hasTag(type, \"Function\")) {\n        // Infix notation\n        renderedArgs.splice(\n          renderedArgs.length - 1,\n          0,\n          <div className=\"block-type-label block-type-label-arrow\">â</div>,\n        );\n      }\n\n      return this.#block(\n        {\n          type: \"type\",\n          id: type.tag,\n        },\n        renderedArgs,\n      );\n    }\n  }\n\n  #renderTypeArg(typeArg: Type, index: number) {\n    const parentIndexPath = this.indexPath;\n    const parentIsCopySource = this.isCopySource;\n\n    this.indexPath = extendIndexPath(this.indexPath, index);\n    this.isCopySource = false;\n\n    const rendered = this.#renderType(typeArg);\n\n    this.indexPath = parentIndexPath;\n    this.isCopySource = parentIsCopySource;\n    return rendered;\n  }\n\n  #renderIdentifier(expr: NameBinding | Var): JSX.Element {\n    return this.#block({\n      type: \"ident\",\n      id: expr.id,\n      binding: this.environment[expr.id],\n    });\n  }\n\n  #renderTypeVarSlot(typeVarSlot: TypeVarSlot, index: number): JSX.Element {\n    const parentIndexPath = this.indexPath;\n    const parentIsCopySource = this.isCopySource;\n\n    this.indexPath = extendIndexPath(this.indexPath, index);\n    this.isCopySource = true;\n\n    const rendered = isTypeNameHole(typeVarSlot)\n      ? this.#block({ type: \"type-name-hole\" })\n      : this.#block({\n          type: \"type-name-binding\",\n          id: typeVarSlot.id,\n        });\n\n    this.indexPath = parentIndexPath;\n    this.isCopySource = parentIsCopySource;\n    return rendered;\n  }\n\n  #renderNameBinding(nb: NameBinding) {\n    const { id } = nb;\n    const binding = this.environment[id]!;\n\n    const body: JSX.Element = nb.type ? (\n      <>\n        <span style={{ marginLeft: \"-0.2em\", marginRight: \"-0.05em\" }}>:</span>\n        {this.#renderTypeArg(nb.type, 0)}\n      </>\n    ) : (\n      <></>\n    );\n\n    return this.#block(\n      {\n        type: \"name-binding\",\n        id,\n        binding,\n      },\n      body,\n    );\n  }\n\n  #hintBodyArgs(bodyArgs: JSX.Element[], hints: string[] = []) {\n    return bodyArgs.map((bodyArg, index) => {\n      const hint = hints[index];\n      if (!hint) return bodyArg;\n\n      const argIndexPath = extendIndexPath(this.indexPath, index);\n      return (\n        <BlockHint key={this.#keyForIndexPath(argIndexPath)} hint={hint}>\n          {bodyArg}\n        </BlockHint>\n      );\n    });\n  }\n\n  #renderCall(expr: Call): JSX.Element {\n    let { called, args } = expr;\n\n    if (called.kind === \"var\") {\n      const calledType = this.typechecker.inferType(called);\n      const minArgCount = functionMinArgCount(calledType) ?? 0;\n\n      // Add holes where arguments are required\n      while (args.length < minArgCount) {\n        args.push(hole);\n      }\n\n      // Remove holes from the end of varargs calls\n      while (args.length > minArgCount && isHole(args.at(-1))) {\n        args.pop();\n      }\n    }\n\n    const renderedArgs = args.map((arg, index) => this.#renderSubexpr(arg, index + 1));\n\n    if (called.kind === \"var\") {\n      const calledBinding = this.environment[called.id];\n      const calledAttributes = calledBinding?.attributes ?? {};\n\n      const { headingArgCount, bodyArgHints } = calledAttributes;\n\n      const heading = headingArgCount ? renderedArgs.slice(0, headingArgCount) : [];\n      const body = renderedArgs.slice(headingArgCount);\n\n      if (calledAttributes.hat) {\n        return this.#block(\n          {\n            type: \"hat\",\n            id: called.id,\n            binding: calledBinding,\n            heading: <>{heading}</>,\n            calledIsVar: true,\n          },\n          this.#hintBodyArgs(body, bodyArgHints),\n        );\n      } else if (calledAttributes.headingArgCount || calledAttributes.bodyArgHints?.length) {\n        return this.#block(\n          {\n            type: \"v\",\n            id: called.id,\n            binding: calledBinding,\n            heading: <>{heading}</>,\n            calledIsVar: true,\n          },\n          this.#hintBodyArgs(body, bodyArgHints),\n        );\n      } else {\n        if (calledAttributes.infix) {\n          const argCount = renderedArgs.length;\n          for (let i = 0; i < argCount - 1; i++) {\n            renderedArgs.splice(2 * i + 1, 0, <div className=\"block-h-label\">{called.id}</div>);\n          }\n        }\n\n        return this.#block(\n          {\n            type: \"h\",\n            id: called.id,\n            binding: calledBinding,\n            calledIsVar: true,\n            argCount: args.length,\n          },\n          renderedArgs,\n        );\n      }\n    } else {\n      const renderedCalled = this.#renderSubexpr(called, 0);\n      return this.#block({ type: \"happly\" }, [renderedCalled, ...renderedArgs]);\n    }\n  }\n\n  #renderStruct(expr: Struct): JSX.Element {\n    const heading = this.#renderVarSlot(expr.name, 0);\n    const body = (\n      <>\n        {expr.fields.map((name, index) => this.#renderVarSlot(name, index + 1))}\n        {\n          // Phantom \"+\" button (name hole) at the end\n          !this.isCopySource &&\n            !this.forDragOverlay &&\n            this.#renderVarSlot(hole, expr.fields.length + 1, {\n              phantom: true,\n            })\n        }\n      </>\n    );\n\n    return this.#block({ type: \"hat\", id: \"structure\", heading }, body);\n  }\n\n  #renderDefine(expr: Define): JSX.Element {\n    const heading = this.#renderVarSlot(expr.name, 0);\n    const body = this.#renderSubexpr(expr.value, 1);\n\n    return this.#block({ type: \"hat\", id: \"define\", heading }, body);\n  }\n\n  #renderLet(expr: Let): JSX.Element {\n    const newEnvironment = this.#extendedEnvironment(expr.bindings.map(([name]) => name));\n\n    const heading = (\n      <>\n        {expr.bindings.map(([name, value], index) => (\n          <>\n            {this.#renderVarSlot(name, 2 * index, {\n              environment: newEnvironment,\n            })}\n            {this.#renderSubexpr(value, 2 * index + 1)}\n          </>\n        ))}\n      </>\n    );\n    const body = this.#renderSubexpr(expr.body, 2 * expr.bindings.length, {\n      environment: newEnvironment,\n    });\n\n    return this.#block({ type: \"v\", id: \"let\", heading }, body);\n  }\n\n  #renderLetrec(expr: Letrec): JSX.Element {\n    const newEnvironment = this.#extendedEnvironment(expr.bindings.map(([name]) => name));\n\n    const heading = (\n      <>\n        {expr.bindings.map(([name, value], index) => (\n          <>\n            {this.#renderVarSlot(name, 2 * index, {\n              environment: newEnvironment,\n            })}\n            {this.#renderSubexpr(value, 2 * index + 1, {\n              environment: newEnvironment,\n            })}\n          </>\n        ))}\n      </>\n    );\n    const body = this.#renderSubexpr(expr.body, 2 * expr.bindings.length, {\n      environment: newEnvironment,\n    });\n\n    return this.#block({ type: \"v\", id: \"letrec\", heading }, body);\n  }\n\n  #renderLambda(expr: Lambda): JSX.Element {\n    const newEnvironment = this.#extendedEnvironment(expr.params);\n\n    const heading = (\n      <>\n        {\n          // Parameters\n          expr.params.map((param, index) =>\n            this.#renderVarSlot(param, index, {\n              environment: newEnvironment,\n            }),\n          )\n        }\n        {\n          // Phantom \"+\" button (parameter name hole) at the end\n          !this.isCopySource &&\n            !this.forDragOverlay &&\n            this.#renderVarSlot(hole, expr.params.length, {\n              environment: newEnvironment,\n              phantom: true,\n            })\n        }\n        {\n          // Return type annotation\n          expr.returnType ? (\n            <>\n              <span style={{ marginLeft: \"0.5em\", marginRight: \"0.25em\" }}>â</span>\n              {this.#renderTypeArg(expr.returnType, expr.params.length + 1)}\n            </>\n          ) : (\n            \"\"\n          )\n        }\n      </>\n    );\n    const body = this.#renderSubexpr(expr.body, expr.params.length + 1, {\n      environment: newEnvironment,\n    });\n\n    return this.#block(\n      {\n        type: \"v\",\n        id: \"function\",\n        heading,\n        returnTypeAnnotation: expr.returnType,\n      },\n      body,\n    );\n  }\n\n  #renderSequence(expr: Sequence): JSX.Element {\n    // TODO: Real editable sequence block!\n    return <>{expr.exprs.map((subexpr, index) => this.#renderSubexpr(subexpr, index))}</>;\n  }\n\n  #renderAndOr(expr: And | Or): JSX.Element {\n    const args = expr.args;\n    // Remove holes from the end\n    while (isHole(args.at(-1))) {\n      args.pop();\n    }\n\n    return this.#block(\n      { type: \"h\", id: expr.kind },\n      expr.args.map((arg, index) => this.#renderSubexpr(arg, index)),\n    );\n  }\n\n  #renderIf(expr: If): JSX.Element {\n    return this.#block(\n      { type: \"v\", id: \"if\", heading: this.#renderSubexpr(expr.if, 0) },\n      this.#hintBodyArgs(\n        [this.#renderSubexpr(expr.then, 1), this.#renderSubexpr(expr.else, 2)],\n        [\"then\", \"else\"],\n      ),\n    );\n  }\n\n  #keyForIndexPath({ tree, path }: TreeIndexPath) {\n    return tree.id + \" \" + path.join(\" \");\n  }\n\n  #extendedEnvironment(varSlots: VarSlot[]) {\n    return extendEnv(this.environment, this.indexPath, varSlots);\n  }\n}\n"],"mappings":"4UAAA,OAAwBA,eAAe,CAAEC,IAAI,CAAEC,MAAM,CAAEC,eAAe,KAAQ,QAAQ,CACtF,MAAO,CAAAC,SAAS,KAAM,qBAAqB,CAC3C,MAAO,CAAAC,KAAK,KAAqB,iBAAiB,CAoBlD,OAASC,IAAI,KAAQ,OAAO,CAC5B,OAAsBC,SAAS,KAAQ,yBAAyB,CAChE,OAGEC,mBAAmB,CACnBC,MAAM,CACNC,YAAY,CACZC,iBAAiB,CACjBC,cAAc,CACdC,SAAS,CACTC,UAAU,KACL,wBAAwB,CAAC,OAAAC,GAAA,IAAAC,IAAA,CAAAC,QAAA,IAAAC,SAAA,CAAAC,IAAA,IAAAC,KAAA,yBAIhC,KAAM,CAAAC,SAAS,cAAGf,IAAI,CAACD,KAAK,CAAC,CAAC,IAAAiB,WAAA,cAAAC,0BAAA,mBAAAC,MAAA,cAAAD,0BAAA,cAAAE,cAAA,cAAAF,0BAAA,sBAAAG,cAAA,cAAAH,0BAAA,sBAAAI,YAAA,cAAAJ,0BAAA,oBAAAK,eAAA,cAAAL,0BAAA,uBAAAM,WAAA,cAAAN,0BAAA,mBAAAO,cAAA,cAAAP,0BAAA,sBAAAQ,iBAAA,cAAAR,0BAAA,yBAAAS,kBAAA,cAAAT,0BAAA,0BAAAU,kBAAA,cAAAV,0BAAA,0BAAAW,aAAA,cAAAX,0BAAA,qBAAAY,WAAA,cAAAZ,0BAAA,mBAAAa,aAAA,cAAAb,0BAAA,qBAAAc,aAAA,cAAAd,0BAAA,qBAAAe,UAAA,cAAAf,0BAAA,kBAAAgB,aAAA,cAAAhB,0BAAA,qBAAAiB,aAAA,cAAAjB,0BAAA,qBAAAkB,eAAA,cAAAlB,0BAAA,uBAAAmB,YAAA,cAAAnB,0BAAA,oBAAAoB,SAAA,cAAApB,0BAAA,iBAAAqB,gBAAA,cAAArB,0BAAA,wBAAAsB,oBAAA,cAAAtB,0BAAA,wBAE9B,MAAO,MAAM,CAAAuB,QAAS,CAQpBC,WAAWA,CACDC,WAAiC,CACjCC,WAAwB,CACxBC,MAAc,CAKtB,IAJA,CAAAC,OAGC,CAAAC,SAAA,CAAAC,MAAA,IAAAD,SAAA,MAAAE,SAAA,CAAAF,SAAA,IAAG,CAAC,CAAC,MANEJ,WAAiC,CAAjCA,WAAiC,MACjCC,WAAwB,CAAxBA,WAAwB,MACxBC,MAAc,CAAdA,MAAc,CAAAK,MAAA,CAAAC,cAAA,MAAAX,oBAAA,EAAAY,KAAA,CAAAC,qBAAA,GAAAH,MAAA,CAAAC,cAAA,MAAAZ,gBAAA,EAAAa,KAAA,CAAAE,iBAAA,GAAAJ,MAAA,CAAAC,cAAA,MAAAb,SAAA,EAAAc,KAAA,CAAAG,UAAA,GAAAL,MAAA,CAAAC,cAAA,MAAAd,YAAA,EAAAe,KAAA,CAAAI,aAAA,GAAAN,MAAA,CAAAC,cAAA,MAAAf,eAAA,EAAAgB,KAAA,CAAAK,gBAAA,GAAAP,MAAA,CAAAC,cAAA,MAAAhB,aAAA,EAAAiB,KAAA,CAAAM,cAAA,GAAAR,MAAA,CAAAC,cAAA,MAAAjB,aAAA,EAAAkB,KAAA,CAAAO,cAAA,GAAAT,MAAA,CAAAC,cAAA,MAAAlB,UAAA,EAAAmB,KAAA,CAAAQ,WAAA,GAAAV,MAAA,CAAAC,cAAA,MAAAnB,aAAA,EAAAoB,KAAA,CAAAS,cAAA,GAAAX,MAAA,CAAAC,cAAA,MAAApB,aAAA,EAAAqB,KAAA,CAAAU,cAAA,GAAAZ,MAAA,CAAAC,cAAA,MAAArB,WAAA,EAAAsB,KAAA,CAAAW,YAAA,GAAAb,MAAA,CAAAC,cAAA,MAAAtB,aAAA,EAAAuB,KAAA,CAAAY,cAAA,GAAAd,MAAA,CAAAC,cAAA,MAAAvB,kBAAA,EAAAwB,KAAA,CAAAa,mBAAA,GAAAf,MAAA,CAAAC,cAAA,MAAAxB,kBAAA,EAAAyB,KAAA,CAAAc,mBAAA,GAAAhB,MAAA,CAAAC,cAAA,MAAAzB,iBAAA,EAAA0B,KAAA,CAAAe,kBAAA,GAAAjB,MAAA,CAAAC,cAAA,MAAA1B,cAAA,EAAA2B,KAAA,CAAAgB,eAAA,GAAAlB,MAAA,CAAAC,cAAA,MAAA3B,WAAA,EAAA4B,KAAA,CAAAiB,YAAA,GAAAnB,MAAA,CAAAC,cAAA,MAAA5B,eAAA,EAAA6B,KAAA,CAAAkB,gBAAA,GAAApB,MAAA,CAAAC,cAAA,MAAA7B,YAAA,EAAA8B,KAAA,CAAAmB,aAAA,GAAArB,MAAA,CAAAC,cAAA,MAAA9B,cAAA,EAAA+B,KAAA,CAAAoB,eAAA,GAAAtB,MAAA,CAAAC,cAAA,MAAA/B,cAAA,EAAAgC,KAAA,CAAAqB,eAAA,GAAAvB,MAAA,CAAAC,cAAA,MAAAhC,MAAA,EAAAiC,KAAA,CAAAsB,OAAA,GAAAxB,MAAA,CAAAC,cAAA,MAAAlC,WAAA,EAAAmC,KAAA,CAAAuB,YAAA,QAVxBC,SAAS,aACTC,YAAY,aAEZC,cAAc,aAEdC,WAAW,QAWT,IAAI,CAACD,cAAc,CAAGhC,OAAO,CAACgC,cAAc,CAC5C,IAAI,CAACC,WAAW,CAAGjC,OAAO,CAACiC,WAAW,CACxC,CAEAC,MAAMA,CACJJ,SAAwB,CAMxB,IALA,CACEC,YAGF,CAAC,CAAA9B,SAAA,CAAAC,MAAA,IAAAD,SAAA,MAAAE,SAAA,CAAAF,SAAA,IAAG,CAAC,CAAC,CAEN,IAAI,CAAC6B,SAAS,CAAGA,SAAS,CAC1B,GAAIC,YAAY,CAAE,IAAI,CAACA,YAAY,CAAGA,YAAY,CAElD,IAAI,CAACjC,WAAW,CAACqC,UAAU,CAAC,CAAC,CAC7B,IAAI,CAACrC,WAAW,CAACsC,SAAS,CAACN,SAAS,CAACO,IAAI,CAAC,CAE1C,KAAM,CAAAC,IAAI,CAAGtF,eAAe,CAAC8E,SAAS,CAAC,CACvC,OAAQQ,IAAI,CAACC,IAAI,EACf,IAAK,SAAS,CACd,IAAK,QAAQ,CACb,IAAK,QAAQ,CACb,IAAK,QAAQ,CACb,IAAK,MAAM,CACT,OAAAC,2BAAA,CAAO,IAAI,CAAAhE,YAAA,EAAAA,YAAA,EAAc8D,IAAI,EAC/B,QACE,OAAAE,2BAAA,CAAO,IAAI,CAAArE,WAAA,EAAAA,WAAA,EAAamE,IAAI,EAChC,CACF,CA6gBF,CAAC,SAAAT,aA3gBaY,IAAU,CAAe,CACnC,OAAQA,IAAI,CAACF,IAAI,EACf,IAAK,QAAQ,CACb,IAAK,SAAS,CACd,IAAK,QAAQ,CACb,IAAK,QAAQ,CACb,IAAK,MAAM,CACT,OAAAC,2BAAA,CAAO,IAAI,CAAAhE,YAAA,EAAAA,YAAA,EAAciE,IAAI,EAE/B,IAAK,MAAM,CACT,OAAAD,2BAAA,CAAO,IAAI,CAAA9D,WAAA,EAAAA,WAAA,EAAa+D,IAAI,CAACC,IAAI,EAEnC,IAAK,cAAc,CACnB,IAAK,KAAK,CACR,OAAAF,2BAAA,CAAO,IAAI,CAAA5D,iBAAA,EAAAA,iBAAA,EAAmB6D,IAAI,EAEpC,IAAK,MAAM,CACT,OAAAD,2BAAA,CAAO,IAAI,CAAAxD,WAAA,EAAAA,WAAA,EAAayD,IAAI,EAE9B,IAAK,QAAQ,CACX,OAAAD,2BAAA,CAAO,IAAI,CAAAvD,aAAA,EAAAA,aAAA,EAAewD,IAAI,EAChC,IAAK,QAAQ,CACX,OAAAD,2BAAA,CAAO,IAAI,CAAAtD,aAAA,EAAAA,aAAA,EAAeuD,IAAI,EAChC,IAAK,KAAK,CACR,OAAAD,2BAAA,CAAO,IAAI,CAAArD,UAAA,EAAAA,UAAA,EAAYsD,IAAI,EAC7B,IAAK,QAAQ,CACX,OAAAD,2BAAA,CAAO,IAAI,CAAApD,aAAA,EAAAA,aAAA,EAAeqD,IAAI,EAChC,IAAK,QAAQ,CACX,OAAAD,2BAAA,CAAO,IAAI,CAAAnD,aAAA,EAAAA,aAAA,EAAeoD,IAAI,EAChC,IAAK,UAAU,CACb,OAAAD,2BAAA,CAAO,IAAI,CAAAlD,eAAA,EAAAA,eAAA,EAAiBmD,IAAI,EAElC,IAAK,KAAK,CACV,IAAK,IAAI,CACP,OAAAD,2BAAA,CAAO,IAAI,CAAAjD,YAAA,EAAAA,YAAA,EAAckD,IAAI,EAC/B,IAAK,IAAI,CACP,OAAAD,2BAAA,CAAO,IAAI,CAAAhD,SAAA,EAAAA,SAAA,EAAWiD,IAAI,EAC5B,IAAK,MAAM,CACT,KAAM,MAAM,CAChB,CACF,CAAC,SAAAb,QAEMe,IAAe,CAA0C,KAAAC,mBAAA,IAAxC,CAAAC,IAAiC,CAAA5C,SAAA,CAAAC,MAAA,IAAAD,SAAA,MAAAE,SAAA,CAAAF,SAAA,IAAG,EAAE,CAC5D,KAAM,CAAA6C,GAAG,CAAAN,2BAAA,CAAG,IAAI,CAAA/C,gBAAA,EAAAA,gBAAA,EAAkB,IAAI,CAACqC,SAAS,CAAC,CAEjD,KAAM,CAAAiB,OAAO,CAAG,SAAS,EAAI,CAAAJ,IAAI,CAAGA,IAAI,CAACI,OAAO,CAAG5C,SAAS,CAC5D,mBACEtC,IAAA,CAACK,SAAS,EAER8E,EAAE,CAAEF,GAAI,CACRhB,SAAS,CAAE,IAAI,CAACA,SAAU,CAC1Ba,IAAI,CAAEA,IAAK,CACXZ,YAAY,CAAE,IAAI,CAACA,YAAa,CAChCjC,WAAW,CAAE,IAAI,CAACA,WAAY,CAC9BC,MAAM,CAAE,IAAI,CAACA,MAAO,CACpBkD,aAAa,CACXF,OAAO,SAAPA,OAAO,YAAAH,mBAAA,CAAPG,OAAO,CAAEG,UAAU,UAAAN,mBAAA,WAAnBA,mBAAA,CAAqBO,MAAM,CACvBX,2BAAA,KAAI,CAAA/C,gBAAA,EAAAA,gBAAA,EAAkBsD,OAAO,CAACG,UAAU,CAACC,MAAM,EAAEC,IAAI,CAAC,CAAC,CAACC,OAAO,CAAC,KAAK,CAAE,GAAG,CAAC,CAACD,IAAI,CAAC,CAAC,CAClFL,OAAO,SAAPA,OAAO,WAAPA,OAAO,CAAEO,IAAI,CACX,UAAUP,OAAO,CAACO,IAAI,EAAE,CACxBnD,SACP,CACD6B,cAAc,CAAE,IAAI,CAACA,cAAe,CACpCC,WAAW,CAAE,IAAI,CAACA,WAAY,CAAAsB,QAAA,CAE7BV,IAAI,EAjBAC,GAkBI,CAAC,CAEhB,CAAC,SAAAnB,gBAGC6B,OAAgB,CAChBC,KAAa,CAEA,IADb,CAAE5D,WAAW,CAAE6D,OAAmE,CAAC,CAAAzD,SAAA,CAAAC,MAAA,IAAAD,SAAA,MAAAE,SAAA,CAAAF,SAAA,IAAG,CAAC,CAAC,CAExF,KAAM,CAAA0D,eAAe,CAAG,IAAI,CAAC7B,SAAS,CACtC,KAAM,CAAA8B,kBAAkB,CAAG,IAAI,CAAC7B,YAAY,CAC5C,KAAM,CAAA8B,iBAAiB,CAAG,IAAI,CAAChE,WAAW,CAE1C,IAAI,CAACiC,SAAS,CAAGjF,eAAe,CAAC,IAAI,CAACiF,SAAS,CAAE2B,KAAK,CAAC,CACvD,IAAI,CAAC1B,YAAY,CAAG,IAAI,CACxB,IAAI,CAAClC,WAAW,CAAGA,WAAW,SAAXA,WAAW,UAAXA,WAAW,CAAI,IAAI,CAACA,WAAW,CAElD,KAAM,CAAAiE,QAAQ,CAAG/G,MAAM,CAACyG,OAAO,CAAC,CAAAhB,2BAAA,CAC5B,IAAI,CAAAnE,MAAA,EAAAA,MAAA,EAAQ,CAAEqE,IAAI,CAAE,WAAW,CAAEgB,OAAQ,CAAC,EAAAlB,2BAAA,CAC1C,IAAI,CAAA1D,kBAAA,EAAAA,kBAAA,EAAoB0E,OAAO,CAAC,CAEpC,IAAI,CAAC1B,SAAS,CAAG6B,eAAe,CAChC,IAAI,CAAC5B,YAAY,CAAG6B,kBAAkB,CACtC,IAAI,CAAC/D,WAAW,CAAGgE,iBAAiB,CACpC,MAAO,CAAAC,QAAQ,CACjB,CAAC,SAAApC,gBAGCqC,OAAa,CACbN,KAAa,CAKA,IAJb,CACE1B,YAAY,CACZlC,WAC8D,CAAC,CAAAI,SAAA,CAAAC,MAAA,IAAAD,SAAA,MAAAE,SAAA,CAAAF,SAAA,IAAG,CAAC,CAAC,CAEtE,KAAM,CAAA0D,eAAe,CAAG,IAAI,CAAC7B,SAAS,CACtC,KAAM,CAAA8B,kBAAkB,CAAG,IAAI,CAAC7B,YAAY,CAC5C,KAAM,CAAA8B,iBAAiB,CAAG,IAAI,CAAChE,WAAW,CAE1C,IAAI,CAACiC,SAAS,CAAGjF,eAAe,CAAC,IAAI,CAACiF,SAAS,CAAE2B,KAAK,CAAC,CACvD,IAAI,CAAC1B,YAAY,CAAG,IAAI,CAACA,YAAY,EAAIA,YAAY,CACrD,IAAI,CAAClC,WAAW,CAAGA,WAAW,SAAXA,WAAW,UAAXA,WAAW,CAAI,IAAI,CAACA,WAAW,CAElD,KAAM,CAAAiE,QAAQ,CAAAtB,2BAAA,CAAG,IAAI,CAAArE,WAAA,EAAAA,WAAA,EAAa4F,OAAO,CAAC,CAE1C,IAAI,CAACjC,SAAS,CAAG6B,eAAe,CAChC,IAAI,CAAC5B,YAAY,CAAG6B,kBAAkB,CACtC,IAAI,CAAC/D,WAAW,CAAGgE,iBAAiB,CACpC,MAAO,CAAAC,QAAQ,CACjB,CAAC,SAAArC,cAEYuC,KAAmB,CAAe,CAC7C,OAAQA,KAAK,CAACzB,IAAI,EAChB,IAAK,SAAS,CACZ,OAAAC,2BAAA,CAAO,IAAI,CAAAnE,MAAA,EAAAA,MAAA,EAAQ,CAAEqE,IAAI,CAAE,MAAM,CAAEpC,KAAK,CAAE0D,KAAK,CAAC1D,KAAM,CAAC,EACzD,IAAK,QAAQ,CACX,OAAAkC,2BAAA,CAAO,IAAI,CAAAnE,MAAA,EAAAA,MAAA,EAAQ,CAAEqE,IAAI,CAAE,QAAQ,CAAEpC,KAAK,CAAE0D,KAAK,CAAC1D,KAAM,CAAC,EAC3D,IAAK,QAAQ,CACX,OAAAkC,2BAAA,CAAO,IAAI,CAAAnE,MAAA,EAAAA,MAAA,EAAQ,CAAEqE,IAAI,CAAE,QAAQ,CAAEpC,KAAK,CAAE0D,KAAK,CAAC1D,KAAM,CAAC,EAC3D,IAAK,QAAQ,CACX,GAAI0D,KAAK,CAAC1D,KAAK,GAAK,GAAG,CAAE,OAAAkC,2BAAA,CAAO,IAAI,CAAAnE,MAAA,EAAAA,MAAA,EAAQ,CAAEqE,IAAI,CAAE,MAAO,CAAC,EAC5D,OAAAF,2BAAA,CAAO,IAAI,CAAAnE,MAAA,EAAAA,MAAA,EAAQ,CAAEqE,IAAI,CAAE,QAAQ,CAAEM,EAAE,CAAEgB,KAAK,CAAC1D,KAAM,CAAC,EACxD,IAAK,MAAM,CACT,KAAM,CAAA2D,KAAK,CAAGD,KAAK,CAACC,KAAK,CACzB;AACA,MAAOlH,MAAM,CAACkH,KAAK,CAACC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAE,CAC3BD,KAAK,CAACE,GAAG,CAAC,CAAC,CACb,CACA,KAAM,CAAAZ,QAAQ,CAAGU,KAAK,CAACG,GAAG,CAAC,CAACC,IAAI,CAAEZ,KAAK,GAAAjB,2BAAA,CAAK,IAAI,CAAA/D,eAAA,EAAAA,eAAA,EAAiB4F,IAAI,CAAEZ,KAAK,CAAG,CAAC,CAAC,CAAC,CAElF,KAAM,CAAAa,IAAI,CAAGN,KAAK,CAACM,IAAI,CAAA9B,2BAAA,CAAG,IAAI,CAAA/D,eAAA,EAAAA,eAAA,EAAiBuF,KAAK,CAACM,IAAI,CAAE,CAAC,EAAInE,SAAS,CAEzE,OAAAqC,2BAAA,CAAO,IAAI,CAAAnE,MAAA,EAAAA,MAAA,EAAQ,CAAEqE,IAAI,CAAE,OAAO,CAAE4B,IAAK,CAAC,CAAEf,QAAQ,EACxD,CACF,CAAC,SAAA/B,iBAGC+C,QAAe,CACfd,KAAa,CAEb,IADA,CAAE1B,YAAyC,CAAC,CAAA9B,SAAA,CAAAC,MAAA,IAAAD,SAAA,MAAAE,SAAA,CAAAF,SAAA,IAAG,CAAC,CAAC,CAEjD,KAAM,CAAA0D,eAAe,CAAG,IAAI,CAAC7B,SAAS,CACtC,KAAM,CAAA8B,kBAAkB,CAAG,IAAI,CAAC7B,YAAY,CAE5C,IAAI,CAACD,SAAS,CAAGjF,eAAe,CAAC,IAAI,CAACiF,SAAS,CAAE2B,KAAK,CAAC,CACvD,IAAI,CAAC1B,YAAY,CAAG,IAAI,CAACA,YAAY,EAAIA,YAAY,CAErD,KAAM,CAAA+B,QAAQ,CAAAtB,2BAAA,CAAG,IAAI,CAAAhE,YAAA,EAAAA,YAAA,EAAc+F,QAAQ,CAAC,CAE5C,IAAI,CAACzC,SAAS,CAAG6B,eAAe,CAChC,IAAI,CAAC5B,YAAY,CAAG6B,kBAAkB,CACtC,MAAO,CAAAE,QAAQ,CACjB,CAAC,SAAAvC,aAEWmB,IAAU,CAAe,CACnC,GAAIhF,SAAS,CAACgF,IAAI,CAAC,CAAE,CACnB,OAAAF,2BAAA,CAAO,IAAI,CAAAnE,MAAA,EAAAA,MAAA,EAAQ,CACjBqE,IAAI,CAAE,UAAU,CAChBM,EAAE,CAAEN,IAAI,CAAC8B,GACX,CAAC,EACH,CAAC,IAAM,IAAIhH,iBAAiB,CAACkF,IAAI,CAAC,CAAE,CAClC;AACA,OAAAF,2BAAA,CAAO,IAAI,CAAAnE,MAAA,EAAAA,MAAA,EAAQ,CACjBqE,IAAI,CAAE,UAAU,CAChBM,EAAE,CAAEN,IAAI,CAACM,EACX,CAAC,EACH,CAAC,IAAM,IAAIvF,cAAc,CAACiF,IAAI,CAAC,CAAE,CAC/B,OAAAF,2BAAA,CAAO,IAAI,CAAAnE,MAAA,EAAAA,MAAA,EAAQ,CACjBqE,IAAI,CAAE,gBACR,CAAC,EACH,CAAC,IAAM,IAAInF,YAAY,CAACmF,IAAI,CAAC,CAAE,CAC7B;AACA,OAAAF,2BAAA,CAAO,IAAI,CAAAnE,MAAA,EAAAA,MAAA,EACT,CACEqE,IAAI,CAAE,MAAM,CACZM,EAAE,CAAE,KACN,CAAC,CACD,CACE,GAAGN,IAAI,CAAC+B,MAAM,CAACL,GAAG,CAAC,CAACM,OAAO,CAAEjB,KAAK,GAAAjB,2BAAA,CAAK,IAAI,CAAA3D,kBAAA,EAAAA,kBAAA,EAAoB6F,OAAO,CAAEjB,KAAK,CAAC,CAAC,CAAAjB,2BAAA,CAC/E,IAAI,CAAA7D,cAAA,EAAAA,cAAA,EAAgB+D,IAAI,CAACG,IAAI,CAAEH,IAAI,CAAC+B,MAAM,CAACvE,MAAM,EAClD,EAEL,CAAC,IAAM,CACL,KAAM,CAAAyE,YAAY,CAAGhH,UAAU,CAAC+E,IAAI,CAAC,CAAC0B,GAAG,CAAC,CAACQ,OAAO,CAAEnB,KAAK,GAAAjB,2BAAA,CACvD,IAAI,CAAA7D,cAAA,EAAAA,cAAA,EAAgBiG,OAAO,CAAEnB,KAAK,CACpC,CAAC,CAED,GAAInG,MAAM,CAACoF,IAAI,CAAE,UAAU,CAAC,CAAE,CAC5B;AACAiC,YAAY,CAACE,MAAM,CACjBF,YAAY,CAACzE,MAAM,CAAG,CAAC,CACvB,CAAC,cACDrC,IAAA,QAAKiH,SAAS,CAAC,yCAAyC,CAAAvB,QAAA,CAAC,QAAC,CAAK,CACjE,CAAC,CACH,CAEA,OAAAf,2BAAA,CAAO,IAAI,CAAAnE,MAAA,EAAAA,MAAA,EACT,CACEqE,IAAI,CAAE,MAAM,CACZM,EAAE,CAAEN,IAAI,CAACqC,GACX,CAAC,CACDJ,YAAY,EAEhB,CACF,CAAC,SAAArD,gBAEcsD,OAAa,CAAEnB,KAAa,CAAE,CAC3C,KAAM,CAAAE,eAAe,CAAG,IAAI,CAAC7B,SAAS,CACtC,KAAM,CAAA8B,kBAAkB,CAAG,IAAI,CAAC7B,YAAY,CAE5C,IAAI,CAACD,SAAS,CAAGjF,eAAe,CAAC,IAAI,CAACiF,SAAS,CAAE2B,KAAK,CAAC,CACvD,IAAI,CAAC1B,YAAY,CAAG,KAAK,CAEzB,KAAM,CAAA+B,QAAQ,CAAAtB,2BAAA,CAAG,IAAI,CAAA9D,WAAA,EAAAA,WAAA,EAAakG,OAAO,CAAC,CAE1C,IAAI,CAAC9C,SAAS,CAAG6B,eAAe,CAChC,IAAI,CAAC5B,YAAY,CAAG6B,kBAAkB,CACtC,MAAO,CAAAE,QAAQ,CACjB,CAAC,SAAAzC,mBAEiBoB,IAAuB,CAAe,CACtD,OAAAD,2BAAA,CAAO,IAAI,CAAAnE,MAAA,EAAAA,MAAA,EAAQ,CACjBqE,IAAI,CAAE,OAAO,CACbM,EAAE,CAAEP,IAAI,CAACO,EAAE,CACXD,OAAO,CAAE,IAAI,CAAClD,WAAW,CAAC4C,IAAI,CAACO,EAAE,CACnC,CAAC,EACH,CAAC,SAAA5B,oBAEkB4D,WAAwB,CAAEvB,KAAa,CAAe,CACvE,KAAM,CAAAE,eAAe,CAAG,IAAI,CAAC7B,SAAS,CACtC,KAAM,CAAA8B,kBAAkB,CAAG,IAAI,CAAC7B,YAAY,CAE5C,IAAI,CAACD,SAAS,CAAGjF,eAAe,CAAC,IAAI,CAACiF,SAAS,CAAE2B,KAAK,CAAC,CACvD,IAAI,CAAC1B,YAAY,CAAG,IAAI,CAExB,KAAM,CAAA+B,QAAQ,CAAGrG,cAAc,CAACuH,WAAW,CAAC,CAAAxC,2BAAA,CACxC,IAAI,CAAAnE,MAAA,EAAAA,MAAA,EAAQ,CAAEqE,IAAI,CAAE,gBAAiB,CAAC,EAAAF,2BAAA,CACtC,IAAI,CAAAnE,MAAA,EAAAA,MAAA,EAAQ,CACVqE,IAAI,CAAE,mBAAmB,CACzBM,EAAE,CAAEgC,WAAW,CAAChC,EAClB,CAAC,CAAC,CAEN,IAAI,CAAClB,SAAS,CAAG6B,eAAe,CAChC,IAAI,CAAC5B,YAAY,CAAG6B,kBAAkB,CACtC,MAAO,CAAAE,QAAQ,CACjB,CAAC,SAAA3C,oBAEkB8D,EAAe,CAAE,CAClC,KAAM,CAAEjC,EAAG,CAAC,CAAGiC,EAAE,CACjB,KAAM,CAAAlC,OAAO,CAAG,IAAI,CAAClD,WAAW,CAACmD,EAAE,CAAE,CAErC,KAAM,CAAAH,IAAiB,CAAGoC,EAAE,CAACvC,IAAI,cAC/BzE,KAAA,CAAAF,SAAA,EAAAwF,QAAA,eACE1F,IAAA,SAAMqH,KAAK,CAAE,CAAEC,UAAU,CAAE,QAAQ,CAAEC,WAAW,CAAE,SAAU,CAAE,CAAA7B,QAAA,CAAC,GAAC,CAAM,CAAC,CAAAf,2BAAA,CACtE,IAAI,CAAA7D,cAAA,EAAAA,cAAA,EAAgBsG,EAAE,CAACvC,IAAI,CAAE,CAAC,GAC/B,CAAC,cAEH7E,IAAA,CAAAE,SAAA,GAAI,CACL,CAED,OAAAyE,2BAAA,CAAO,IAAI,CAAAnE,MAAA,EAAAA,MAAA,EACT,CACEqE,IAAI,CAAE,cAAc,CACpBM,EAAE,CACFD,OACF,CAAC,CACDF,IAAI,EAER,CAAC,SAAA3B,eAEamE,QAAuB,CAAwB,IAAtB,CAAAC,KAAe,CAAArF,SAAA,CAAAC,MAAA,IAAAD,SAAA,MAAAE,SAAA,CAAAF,SAAA,IAAG,EAAE,CACzD,MAAO,CAAAoF,QAAQ,CAACjB,GAAG,CAAC,CAACmB,OAAO,CAAE9B,KAAK,GAAK,CACtC,KAAM,CAAA+B,IAAI,CAAGF,KAAK,CAAC7B,KAAK,CAAC,CACzB,GAAI,CAAC+B,IAAI,CAAE,MAAO,CAAAD,OAAO,CAEzB,KAAM,CAAAE,YAAY,CAAG5I,eAAe,CAAC,IAAI,CAACiF,SAAS,CAAE2B,KAAK,CAAC,CAC3D,mBACE5F,IAAA,CAACZ,SAAS,EAA2CuI,IAAI,CAAEA,IAAK,CAAAjC,QAAA,CAC7DgC,OAAO,EAAA/C,2BAAA,CADM,IAAI,CAAA/C,gBAAA,EAAAA,gBAAA,EAAkBgG,YAAY,CAEvC,CAAC,CAEhB,CAAC,CAAC,CACJ,CAAC,SAAAxE,aAEWwB,IAAU,CAAe,CACnC,GAAI,CAAEiD,MAAM,CAAEC,IAAK,CAAC,CAAGlD,IAAI,CAE3B,GAAIiD,MAAM,CAACnD,IAAI,GAAK,KAAK,CAAE,KAAAqD,oBAAA,CACzB,KAAM,CAAAC,UAAU,CAAG,IAAI,CAAC/F,WAAW,CAACsC,SAAS,CAACsD,MAAM,CAAC,CACrD,KAAM,CAAAI,WAAW,EAAAF,oBAAA,CAAGvI,mBAAmB,CAACwI,UAAU,CAAC,UAAAD,oBAAA,UAAAA,oBAAA,CAAI,CAAC,CAExD;AACA,MAAOD,IAAI,CAACzF,MAAM,CAAG4F,WAAW,CAAE,CAChCH,IAAI,CAACI,IAAI,CAACjJ,IAAI,CAAC,CACjB,CAEA;AACA,MAAO6I,IAAI,CAACzF,MAAM,CAAG4F,WAAW,EAAI/I,MAAM,CAAC4I,IAAI,CAACzB,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAE,CACvDyB,IAAI,CAACxB,GAAG,CAAC,CAAC,CACZ,CACF,CAEA,KAAM,CAAAQ,YAAY,CAAGgB,IAAI,CAACvB,GAAG,CAAC,CAAC4B,GAAG,CAAEvC,KAAK,GAAAjB,2BAAA,CAAK,IAAI,CAAAjE,cAAA,EAAAA,cAAA,EAAgByH,GAAG,CAAEvC,KAAK,CAAG,CAAC,CAAC,CAAC,CAElF,GAAIiC,MAAM,CAACnD,IAAI,GAAK,KAAK,CAAE,KAAA0D,qBAAA,CAAAC,qBAAA,CACzB,KAAM,CAAAC,aAAa,CAAG,IAAI,CAACtG,WAAW,CAAC6F,MAAM,CAAC1C,EAAE,CAAC,CACjD,KAAM,CAAAoD,gBAAgB,EAAAH,qBAAA,CAAGE,aAAa,SAAbA,aAAa,iBAAbA,aAAa,CAAEjD,UAAU,UAAA+C,qBAAA,UAAAA,qBAAA,CAAI,CAAC,CAAC,CAExD,KAAM,CAAEI,eAAe,CAAEC,YAAa,CAAC,CAAGF,gBAAgB,CAE1D,KAAM,CAAAG,OAAO,CAAGF,eAAe,CAAG1B,YAAY,CAAC6B,KAAK,CAAC,CAAC,CAAEH,eAAe,CAAC,CAAG,EAAE,CAC7E,KAAM,CAAAxD,IAAI,CAAG8B,YAAY,CAAC6B,KAAK,CAACH,eAAe,CAAC,CAEhD,GAAID,gBAAgB,CAACK,GAAG,CAAE,CACxB,OAAAjE,2BAAA,CAAO,IAAI,CAAAnE,MAAA,EAAAA,MAAA,EACT,CACEqE,IAAI,CAAE,KAAK,CACXM,EAAE,CAAE0C,MAAM,CAAC1C,EAAE,CACbD,OAAO,CAAEoD,aAAa,CACtBI,OAAO,cAAE1I,IAAA,CAAAE,SAAA,EAAAwF,QAAA,CAAGgD,OAAO,CAAG,CAAC,CACvBG,WAAW,CAAE,IACf,CAAC,CAAAlE,2BAAA,CACD,IAAI,CAAAzD,aAAA,EAAAA,aAAA,EAAe8D,IAAI,CAAEyD,YAAY,GAEzC,CAAC,IAAM,IAAIF,gBAAgB,CAACC,eAAe,GAAAH,qBAAA,CAAIE,gBAAgB,CAACE,YAAY,UAAAJ,qBAAA,WAA7BA,qBAAA,CAA+BhG,MAAM,CAAE,CACpF,OAAAsC,2BAAA,CAAO,IAAI,CAAAnE,MAAA,EAAAA,MAAA,EACT,CACEqE,IAAI,CAAE,GAAG,CACTM,EAAE,CAAE0C,MAAM,CAAC1C,EAAE,CACbD,OAAO,CAAEoD,aAAa,CACtBI,OAAO,cAAE1I,IAAA,CAAAE,SAAA,EAAAwF,QAAA,CAAGgD,OAAO,CAAG,CAAC,CACvBG,WAAW,CAAE,IACf,CAAC,CAAAlE,2BAAA,CACD,IAAI,CAAAzD,aAAA,EAAAA,aAAA,EAAe8D,IAAI,CAAEyD,YAAY,GAEzC,CAAC,IAAM,CACL,GAAIF,gBAAgB,CAACO,KAAK,CAAE,CAC1B,KAAM,CAAAC,QAAQ,CAAGjC,YAAY,CAACzE,MAAM,CACpC,IAAK,GAAI,CAAA2G,CAAC,CAAG,CAAC,CAAEA,CAAC,CAAGD,QAAQ,CAAG,CAAC,CAAEC,CAAC,EAAE,CAAE,CACrClC,YAAY,CAACE,MAAM,CAAC,CAAC,CAAGgC,CAAC,CAAG,CAAC,CAAE,CAAC,cAAEhJ,IAAA,QAAKiH,SAAS,CAAC,eAAe,CAAAvB,QAAA,CAAEmC,MAAM,CAAC1C,EAAE,CAAM,CAAC,CAAC,CACrF,CACF,CAEA,OAAAR,2BAAA,CAAO,IAAI,CAAAnE,MAAA,EAAAA,MAAA,EACT,CACEqE,IAAI,CAAE,GAAG,CACTM,EAAE,CAAE0C,MAAM,CAAC1C,EAAE,CACbD,OAAO,CAAEoD,aAAa,CACtBO,WAAW,CAAE,IAAI,CACjBE,QAAQ,CAAEjB,IAAI,CAACzF,MACjB,CAAC,CACDyE,YAAY,EAEhB,CACF,CAAC,IAAM,CACL,KAAM,CAAAmC,cAAc,CAAAtE,2BAAA,CAAG,IAAI,CAAAjE,cAAA,EAAAA,cAAA,EAAgBmH,MAAM,CAAE,CAAC,CAAC,CACrD,OAAAlD,2BAAA,CAAO,IAAI,CAAAnE,MAAA,EAAAA,MAAA,EAAQ,CAAEqE,IAAI,CAAE,QAAS,CAAC,CAAE,CAACoE,cAAc,CAAE,GAAGnC,YAAY,CAAC,EAC1E,CACF,CAAC,SAAA3D,eAEayB,IAAY,CAAe,CACvC,KAAM,CAAA8D,OAAO,CAAA/D,2BAAA,CAAG,IAAI,CAAAlE,cAAA,EAAAA,cAAA,EAAgBmE,IAAI,CAACa,IAAI,CAAE,CAAC,CAAC,CACjD,KAAM,CAAAT,IAAI,cACR5E,KAAA,CAAAF,SAAA,EAAAwF,QAAA,EACGd,IAAI,CAACsE,MAAM,CAAC3C,GAAG,CAAC,CAACd,IAAI,CAAEG,KAAK,GAAAjB,2BAAA,CAAK,IAAI,CAAAlE,cAAA,EAAAA,cAAA,EAAgBgF,IAAI,CAAEG,KAAK,CAAG,CAAC,CAAC,CAAC,CAErE;AACA,CAAC,IAAI,CAAC1B,YAAY,EAChB,CAAC,IAAI,CAACC,cAAc,EAAAQ,2BAAA,CACpB,IAAI,CAAAlE,cAAA,EAAAA,cAAA,EAAgBxB,IAAI,CAAE2F,IAAI,CAACsE,MAAM,CAAC7G,MAAM,CAAG,CAAC,CAAE,CAChDwD,OAAO,CAAE,IACX,CAAC,CAAC,EAEN,CACH,CAED,OAAAlB,2BAAA,CAAO,IAAI,CAAAnE,MAAA,EAAAA,MAAA,EAAQ,CAAEqE,IAAI,CAAE,KAAK,CAAEM,EAAE,CAAE,WAAW,CAAEuD,OAAQ,CAAC,CAAE1D,IAAI,EACpE,CAAC,SAAA9B,eAEa0B,IAAY,CAAe,CACvC,KAAM,CAAA8D,OAAO,CAAA/D,2BAAA,CAAG,IAAI,CAAAlE,cAAA,EAAAA,cAAA,EAAgBmE,IAAI,CAACa,IAAI,CAAE,CAAC,CAAC,CACjD,KAAM,CAAAT,IAAI,CAAAL,2BAAA,CAAG,IAAI,CAAAjE,cAAA,EAAAA,cAAA,EAAgBkE,IAAI,CAACnC,KAAK,CAAE,CAAC,CAAC,CAE/C,OAAAkC,2BAAA,CAAO,IAAI,CAAAnE,MAAA,EAAAA,MAAA,EAAQ,CAAEqE,IAAI,CAAE,KAAK,CAAEM,EAAE,CAAE,QAAQ,CAAEuD,OAAQ,CAAC,CAAE1D,IAAI,EACjE,CAAC,SAAA/B,YAEU2B,IAAS,CAAe,CACjC,KAAM,CAAAuE,cAAc,CAAAxE,2BAAA,CAAG,IAAI,CAAA9C,oBAAA,EAAAA,oBAAA,EAAsB+C,IAAI,CAACwE,QAAQ,CAAC7C,GAAG,CAAC8C,IAAA,MAAC,CAAC5D,IAAI,CAAC,CAAA4D,IAAA,OAAK,CAAA5D,IAAI,GAAC,CAAC,CAErF,KAAM,CAAAiD,OAAO,cACX1I,IAAA,CAAAE,SAAA,EAAAwF,QAAA,CACGd,IAAI,CAACwE,QAAQ,CAAC7C,GAAG,CAAC,CAAA+C,KAAA,CAAgB1D,KAAK,OAApB,CAACH,IAAI,CAAEhD,KAAK,CAAC,CAAA6G,KAAA,oBAC/BlJ,KAAA,CAAAF,SAAA,EAAAwF,QAAA,EAAAf,2BAAA,CACG,IAAI,CAAAlE,cAAA,EAAAA,cAAA,EAAgBgF,IAAI,CAAE,CAAC,CAAGG,KAAK,CAAE,CACpC5D,WAAW,CAAEmH,cACf,CAAC,EAAAxE,2BAAA,CACA,IAAI,CAAAjE,cAAA,EAAAA,cAAA,EAAgB+B,KAAK,CAAE,CAAC,CAAGmD,KAAK,CAAG,CAAC,GACzC,CAAC,EACJ,CAAC,CACF,CACH,CACD,KAAM,CAAAZ,IAAI,CAAAL,2BAAA,CAAG,IAAI,CAAAjE,cAAA,EAAAA,cAAA,EAAgBkE,IAAI,CAACI,IAAI,CAAE,CAAC,CAAGJ,IAAI,CAACwE,QAAQ,CAAC/G,MAAM,CAAE,CACpEL,WAAW,CAAEmH,cACf,CAAC,CAAC,CAEF,OAAAxE,2BAAA,CAAO,IAAI,CAAAnE,MAAA,EAAAA,MAAA,EAAQ,CAAEqE,IAAI,CAAE,GAAG,CAAEM,EAAE,CAAE,KAAK,CAAEuD,OAAQ,CAAC,CAAE1D,IAAI,EAC5D,CAAC,SAAAhC,eAEa4B,IAAY,CAAe,CACvC,KAAM,CAAAuE,cAAc,CAAAxE,2BAAA,CAAG,IAAI,CAAA9C,oBAAA,EAAAA,oBAAA,EAAsB+C,IAAI,CAACwE,QAAQ,CAAC7C,GAAG,CAACgD,KAAA,MAAC,CAAC9D,IAAI,CAAC,CAAA8D,KAAA,OAAK,CAAA9D,IAAI,GAAC,CAAC,CAErF,KAAM,CAAAiD,OAAO,cACX1I,IAAA,CAAAE,SAAA,EAAAwF,QAAA,CACGd,IAAI,CAACwE,QAAQ,CAAC7C,GAAG,CAAC,CAAAiD,KAAA,CAAgB5D,KAAK,OAApB,CAACH,IAAI,CAAEhD,KAAK,CAAC,CAAA+G,KAAA,oBAC/BpJ,KAAA,CAAAF,SAAA,EAAAwF,QAAA,EAAAf,2BAAA,CACG,IAAI,CAAAlE,cAAA,EAAAA,cAAA,EAAgBgF,IAAI,CAAE,CAAC,CAAGG,KAAK,CAAE,CACpC5D,WAAW,CAAEmH,cACf,CAAC,EAAAxE,2BAAA,CACA,IAAI,CAAAjE,cAAA,EAAAA,cAAA,EAAgB+B,KAAK,CAAE,CAAC,CAAGmD,KAAK,CAAG,CAAC,CAAE,CACzC5D,WAAW,CAAEmH,cACf,CAAC,GACD,CAAC,EACJ,CAAC,CACF,CACH,CACD,KAAM,CAAAnE,IAAI,CAAAL,2BAAA,CAAG,IAAI,CAAAjE,cAAA,EAAAA,cAAA,EAAgBkE,IAAI,CAACI,IAAI,CAAE,CAAC,CAAGJ,IAAI,CAACwE,QAAQ,CAAC/G,MAAM,CAAE,CACpEL,WAAW,CAAEmH,cACf,CAAC,CAAC,CAEF,OAAAxE,2BAAA,CAAO,IAAI,CAAAnE,MAAA,EAAAA,MAAA,EAAQ,CAAEqE,IAAI,CAAE,GAAG,CAAEM,EAAE,CAAE,QAAQ,CAAEuD,OAAQ,CAAC,CAAE1D,IAAI,EAC/D,CAAC,SAAAjC,eAEa6B,IAAY,CAAe,CACvC,KAAM,CAAAuE,cAAc,CAAAxE,2BAAA,CAAG,IAAI,CAAA9C,oBAAA,EAAAA,oBAAA,EAAsB+C,IAAI,CAAC6E,MAAM,CAAC,CAE7D,KAAM,CAAAf,OAAO,cACXtI,KAAA,CAAAF,SAAA,EAAAwF,QAAA,EAEI;AACAd,IAAI,CAAC6E,MAAM,CAAClD,GAAG,CAAC,CAACmD,KAAK,CAAE9D,KAAK,GAAAjB,2BAAA,CAC3B,IAAI,CAAAlE,cAAA,EAAAA,cAAA,EAAgBiJ,KAAK,CAAE9D,KAAK,CAAE,CAChC5D,WAAW,CAAEmH,cACf,CAAC,CACH,CAAC,CAGD;AACA,CAAC,IAAI,CAACjF,YAAY,EAChB,CAAC,IAAI,CAACC,cAAc,EAAAQ,2BAAA,CACpB,IAAI,CAAAlE,cAAA,EAAAA,cAAA,EAAgBxB,IAAI,CAAE2F,IAAI,CAAC6E,MAAM,CAACpH,MAAM,CAAE,CAC5CL,WAAW,CAAEmH,cAAc,CAC3BtD,OAAO,CAAE,IACX,CAAC,CAAC,CAGJ;AACAjB,IAAI,CAAC+E,UAAU,cACbvJ,KAAA,CAAAF,SAAA,EAAAwF,QAAA,eACE1F,IAAA,SAAMqH,KAAK,CAAE,CAAEC,UAAU,CAAE,OAAO,CAAEC,WAAW,CAAE,QAAS,CAAE,CAAA7B,QAAA,CAAC,QAAC,CAAM,CAAC,CAAAf,2BAAA,CACpE,IAAI,CAAA7D,cAAA,EAAAA,cAAA,EAAgB8D,IAAI,CAAC+E,UAAU,CAAE/E,IAAI,CAAC6E,MAAM,CAACpH,MAAM,CAAG,CAAC,GAC5D,CAAC,CAEH,EACD,EAEH,CACH,CACD,KAAM,CAAA2C,IAAI,CAAAL,2BAAA,CAAG,IAAI,CAAAjE,cAAA,EAAAA,cAAA,EAAgBkE,IAAI,CAACI,IAAI,CAAEJ,IAAI,CAAC6E,MAAM,CAACpH,MAAM,CAAG,CAAC,CAAE,CAClEL,WAAW,CAAEmH,cACf,CAAC,CAAC,CAEF,OAAAxE,2BAAA,CAAO,IAAI,CAAAnE,MAAA,EAAAA,MAAA,EACT,CACEqE,IAAI,CAAE,GAAG,CACTM,EAAE,CAAE,UAAU,CACduD,OAAO,CACPkB,oBAAoB,CAAEhF,IAAI,CAAC+E,UAC7B,CAAC,CACD3E,IAAI,EAER,CAAC,SAAAlC,iBAEe8B,IAAc,CAAe,CAC3C;AACA,mBAAO5E,IAAA,CAAAE,SAAA,EAAAwF,QAAA,CAAGd,IAAI,CAACiF,KAAK,CAACtD,GAAG,CAAC,CAACL,OAAO,CAAEN,KAAK,GAAAjB,2BAAA,CAAK,IAAI,CAAAjE,cAAA,EAAAA,cAAA,EAAgBwF,OAAO,CAAEN,KAAK,CAAC,CAAC,CAAG,CAAC,CACvF,CAAC,SAAA/C,cAEY+B,IAAc,CAAe,CACxC,KAAM,CAAAkD,IAAI,CAAGlD,IAAI,CAACkD,IAAI,CACtB;AACA,MAAO5I,MAAM,CAAC4I,IAAI,CAACzB,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAE,CAC1ByB,IAAI,CAACxB,GAAG,CAAC,CAAC,CACZ,CAEA,OAAA3B,2BAAA,CAAO,IAAI,CAAAnE,MAAA,EAAAA,MAAA,EACT,CAAEqE,IAAI,CAAE,GAAG,CAAEM,EAAE,CAAEP,IAAI,CAACF,IAAK,CAAC,CAC5BE,IAAI,CAACkD,IAAI,CAACvB,GAAG,CAAC,CAAC4B,GAAG,CAAEvC,KAAK,GAAAjB,2BAAA,CAAK,IAAI,CAAAjE,cAAA,EAAAA,cAAA,EAAgByH,GAAG,CAAEvC,KAAK,CAAC,CAAC,EAElE,CAAC,SAAAhD,WAESgC,IAAQ,CAAe,CAC/B,OAAAD,2BAAA,CAAO,IAAI,CAAAnE,MAAA,EAAAA,MAAA,EACT,CAAEqE,IAAI,CAAE,GAAG,CAAEM,EAAE,CAAE,IAAI,CAAEuD,OAAO,CAAA/D,2BAAA,CAAE,IAAI,CAAAjE,cAAA,EAAAA,cAAA,EAAgBkE,IAAI,CAACkF,EAAE,CAAE,CAAC,CAAE,CAAC,CAAAnF,2BAAA,CACjE,IAAI,CAAAzD,aAAA,EAAAA,aAAA,EACF,CAAAyD,2BAAA,CAAC,IAAI,CAAAjE,cAAA,EAAAA,cAAA,EAAgBkE,IAAI,CAACmF,IAAI,CAAE,CAAC,EAAApF,2BAAA,CAAG,IAAI,CAAAjE,cAAA,EAAAA,cAAA,EAAgBkE,IAAI,CAACoF,IAAI,CAAE,CAAC,EAAE,CACtE,CAAC,MAAM,CAAE,MAAM,CAAC,GAGtB,CAAC,SAAArH,kBAAAsH,KAAA,CAE+C,IAA/B,CAAEzF,IAAI,CAAE0F,IAAoB,CAAC,CAAAD,KAAA,CAC5C,MAAO,CAAAzF,IAAI,CAACW,EAAE,CAAG,GAAG,CAAG+E,IAAI,CAACC,IAAI,CAAC,GAAG,CAAC,CACvC,CAAC,SAAAzH,sBAEoB0H,QAAmB,CAAE,CACxC,MAAO,CAAA7K,SAAS,CAAC,IAAI,CAACyC,WAAW,CAAE,IAAI,CAACiC,SAAS,CAAEmG,QAAQ,CAAC,CAC9D","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}