{"ast":null,"code":"import{serializeDatum}from\"../datum/serialize\";export function prettyPrintValue(value){switch(value.kind){case\"Boolean\":case\"Number\":case\"String\":case\"Symbol\":return serializeDatum(value);case\"List\":const heads=value.heads.map(serializeDatum).join(\" \");if(value.tail){const tail=prettyPrintValue(value.tail);return`(${heads} . ${tail})`;}return`(${heads})`;case\"fn\":return\"[function]\";case\"component\":return\"[component]\";}}export function valueIsDatum(value){switch(value.kind){case\"Boolean\":case\"Number\":case\"String\":case\"Symbol\":case\"List\":return true;default:return false;}}export function valueAsBool(value){switch(value.kind){case\"Boolean\":return value.value;case\"Number\":return value.value!==0;case\"String\":return value.value.length>0;case\"Symbol\":return true;case\"List\":return value.heads.length>0||value.tail!==undefined;default:return true;}}export function vectorNormalizeListValue(list){const asVector=listValueAsVector(list);if(asVector===undefined)return undefined;return{kind:\"List\",heads:asVector};}export function listValueAsVector(list){if(!list.tail)return list.heads;if(list.tail.kind!==\"List\")return undefined;const tailAsVector=listValueAsVector(list.tail);if(tailAsVector===undefined)return undefined;return[...list.heads,...tailAsVector];}export function consNormalizeListValue(list){const last={kind:\"List\",heads:[]};let head=last;let cur=list;while(true){if(cur.heads.length){head={kind:\"List\",heads:[cur.heads.shift()],tail:head};}else{var _cur$tail;if(((_cur$tail=cur.tail)===null||_cur$tail===void 0?void 0:_cur$tail.kind)===\"List\"){cur=cur.tail;}else{last.tail=cur.tail;return head;}}}}export function getVariadic(nonvariadic,args){return args.slice(nonvariadic);}","map":{"version":3,"names":["serializeDatum","prettyPrintValue","value","kind","heads","map","join","tail","valueIsDatum","valueAsBool","length","undefined","vectorNormalizeListValue","list","asVector","listValueAsVector","tailAsVector","consNormalizeListValue","last","head","cur","shift","_cur$tail","getVariadic","nonvariadic","args","slice"],"sources":["/Users/hamzashahzad/Desktop/resume_projects/sparkground/src/evaluator/value.ts"],"sourcesContent":["import { BoolDatum, Datum, NumberDatum, StringDatum, SymbolDatum } from \"../datum/datum\";\nimport { serializeDatum } from \"../datum/serialize\";\nimport { Environment } from \"../editor/library/environments\";\nimport { TreeIndexPath } from \"../editor/trees/tree\";\nimport { Expr } from \"../expr/expr\";\nimport { SparkgroundComponent } from \"./component\";\nimport { DynamicFnSignature } from \"./dynamic-type\";\nimport { EvalStateGenerator, EvaluatorInterface } from \"./evaluate\";\n\nexport type Value =\n  | BoolDatum\n  | NumberDatum\n  | StringDatum\n  | SymbolDatum\n  | ListValue\n  | FnValue\n  | ComponentValue;\n\nexport type ListValue = {\n  kind: \"List\";\n  heads: Value[];\n  tail?: Value;\n};\n\nexport type FnValue = {\n  kind: \"fn\";\n  signature: DynamicFnSignature;\n  body: BuiltinFn | Expr;\n  indexPath?: TreeIndexPath;\n  env?: Environment;\n};\n\nexport type BuiltinFn = (args: Value[], evaluator: EvaluatorInterface) => EvalStateGenerator;\n\nexport type ComponentValue = {\n  kind: \"component\";\n  component: SparkgroundComponent;\n};\n\nexport function prettyPrintValue(value: Value): string {\n  switch (value.kind) {\n    case \"Boolean\":\n    case \"Number\":\n    case \"String\":\n    case \"Symbol\":\n      return serializeDatum(value);\n    case \"List\":\n      const heads = value.heads.map(serializeDatum).join(\" \");\n      if (value.tail) {\n        const tail = prettyPrintValue(value.tail);\n        return `(${heads} . ${tail})`;\n      }\n      return `(${heads})`;\n    case \"fn\":\n      return \"[function]\";\n    case \"component\":\n      return \"[component]\";\n  }\n}\n\nexport function valueIsDatum(value: Value): value is Datum {\n  switch (value.kind) {\n    case \"Boolean\":\n    case \"Number\":\n    case \"String\":\n    case \"Symbol\":\n    case \"List\":\n      return true;\n    default:\n      return false;\n  }\n}\n\nexport function valueAsBool(value: Value): boolean {\n  switch (value.kind) {\n    case \"Boolean\":\n      return value.value;\n    case \"Number\":\n      return value.value !== 0;\n    case \"String\":\n      return value.value.length > 0;\n    case \"Symbol\":\n      return true;\n    case \"List\":\n      return value.heads.length > 0 || value.tail !== undefined;\n    default:\n      return true;\n  }\n}\n\nexport function vectorNormalizeListValue(list: ListValue): ListValue | undefined {\n  const asVector = listValueAsVector(list);\n  if (asVector === undefined) return undefined;\n\n  return {\n    kind: \"List\",\n    heads: asVector,\n  };\n}\n\nexport function listValueAsVector(list: ListValue): Value[] | undefined {\n  if (!list.tail) return list.heads;\n  if (list.tail.kind !== \"List\") return undefined;\n\n  const tailAsVector = listValueAsVector(list.tail);\n  if (tailAsVector === undefined) return undefined;\n\n  return [...list.heads, ...tailAsVector];\n}\n\nexport function consNormalizeListValue(list: ListValue): ListValue {\n  const last: ListValue = { kind: \"List\", heads: [] };\n  let head: ListValue = last;\n\n  let cur = list;\n  while (true) {\n    if (cur.heads.length) {\n      head = { kind: \"List\", heads: [cur.heads.shift()!], tail: head };\n    } else {\n      if (cur.tail?.kind === \"List\") {\n        cur = cur.tail;\n      } else {\n        last.tail = cur.tail;\n        return head;\n      }\n    }\n  }\n}\n\nexport function getVariadic<T extends Value>(nonvariadic: number, args: Value[]): T[] {\n  return args.slice(nonvariadic) as T[];\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}