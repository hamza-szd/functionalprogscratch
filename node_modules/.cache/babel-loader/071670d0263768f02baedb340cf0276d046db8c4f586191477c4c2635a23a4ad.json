{"ast":null,"code":"// https://github.com/clauderic/dnd-kit/issues/477#issuecomment-985194908\nimport{KeyboardSensor,PointerSensor}from\"@dnd-kit/core\";export class CustomPointerSensor extends PointerSensor{}CustomPointerSensor.activators=PointerSensor.activators.map(_ref=>{let{eventName,handler}=_ref;return{eventName,handler(event,options){return shouldHandleEvent(event.nativeEvent.target)&&handler(event,options);}};});export class CustomKeyboardSensor extends KeyboardSensor{}CustomKeyboardSensor.activators=KeyboardSensor.activators.map(_ref2=>{let{eventName,handler}=_ref2;return{eventName,handler(event,options,context){return shouldHandleEvent(event.nativeEvent.target)&&handler(event,options,context);}};});function shouldHandleEvent(element){let cur=element;while(cur){if(cur.dataset&&cur.dataset.noDnd===\"true\"){return false;}cur=cur.parentElement;}return true;}","map":{"version":3,"names":["KeyboardSensor","PointerSensor","CustomPointerSensor","activators","map","_ref","eventName","handler","event","options","shouldHandleEvent","nativeEvent","target","CustomKeyboardSensor","_ref2","context","element","cur","dataset","noDnd","parentElement"],"sources":["/Users/hamzashahzad/Desktop/resume_projects/sparkground/src/editor/blocks/drag-sensors.ts"],"sourcesContent":["// https://github.com/clauderic/dnd-kit/issues/477#issuecomment-985194908\n\nimport { KeyboardSensor, PointerSensor } from \"@dnd-kit/core\";\n\nexport class CustomPointerSensor extends PointerSensor {\n  static activators = PointerSensor.activators.map(\n    ({ eventName, handler }): (typeof PointerSensor.activators)[number] => ({\n      eventName,\n      handler(event, options) {\n        return (\n          shouldHandleEvent(event.nativeEvent.target as HTMLElement) && handler(event, options)\n        );\n      },\n    }),\n  );\n}\n\nexport class CustomKeyboardSensor extends KeyboardSensor {\n  static activators = KeyboardSensor.activators.map(\n    ({ eventName, handler }): (typeof KeyboardSensor.activators)[number] => ({\n      eventName,\n      handler(event, options, context) {\n        return (\n          shouldHandleEvent(event.nativeEvent.target as HTMLElement) &&\n          handler(event, options, context)\n        );\n      },\n    }),\n  );\n}\n\nfunction shouldHandleEvent(element: HTMLElement | null) {\n  let cur = element;\n\n  while (cur) {\n    if (cur.dataset && cur.dataset.noDnd === \"true\") {\n      return false;\n    }\n    cur = cur.parentElement;\n  }\n\n  return true;\n}\n"],"mappings":"AAAA;AAEA,OAASA,cAAc,CAAEC,aAAa,KAAQ,eAAe,CAE7D,MAAO,MAAM,CAAAC,mBAAmB,QAAS,CAAAD,aAAc,EAA1CC,mBAAmB,CACvBC,UAAU,CAAGF,aAAa,CAACE,UAAU,CAACC,GAAG,CAC9CC,IAAA,MAAC,CAAEC,SAAS,CAAEC,OAAQ,CAAC,CAAAF,IAAA,OAAiD,CACtEC,SAAS,CACTC,OAAOA,CAACC,KAAK,CAAEC,OAAO,CAAE,CACtB,MACE,CAAAC,iBAAiB,CAACF,KAAK,CAACG,WAAW,CAACC,MAAqB,CAAC,EAAIL,OAAO,CAACC,KAAK,CAAEC,OAAO,CAAC,CAEzF,CACF,CAAC,EACH,CAAC,CAGH,MAAO,MAAM,CAAAI,oBAAoB,QAAS,CAAAb,cAAe,EAA5Ca,oBAAoB,CACxBV,UAAU,CAAGH,cAAc,CAACG,UAAU,CAACC,GAAG,CAC/CU,KAAA,MAAC,CAAER,SAAS,CAAEC,OAAQ,CAAC,CAAAO,KAAA,OAAkD,CACvER,SAAS,CACTC,OAAOA,CAACC,KAAK,CAAEC,OAAO,CAAEM,OAAO,CAAE,CAC/B,MACE,CAAAL,iBAAiB,CAACF,KAAK,CAACG,WAAW,CAACC,MAAqB,CAAC,EAC1DL,OAAO,CAACC,KAAK,CAAEC,OAAO,CAAEM,OAAO,CAAC,CAEpC,CACF,CAAC,EACH,CAAC,CAGH,QAAS,CAAAL,iBAAiBA,CAACM,OAA2B,CAAE,CACtD,GAAI,CAAAC,GAAG,CAAGD,OAAO,CAEjB,MAAOC,GAAG,CAAE,CACV,GAAIA,GAAG,CAACC,OAAO,EAAID,GAAG,CAACC,OAAO,CAACC,KAAK,GAAK,MAAM,CAAE,CAC/C,MAAO,MAAK,CACd,CACAF,GAAG,CAAGA,GAAG,CAACG,aAAa,CACzB,CAEA,MAAO,KAAI,CACb","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}