{"ast":null,"code":"import _classPrivateFieldLooseBase from\"/Users/hamzashahzad/Desktop/resume_projects/sparkground/node_modules/@babel/runtime/helpers/esm/classPrivateFieldLooseBase.js\";import _classPrivateFieldLooseKey from\"/Users/hamzashahzad/Desktop/resume_projects/sparkground/node_modules/@babel/runtime/helpers/esm/classPrivateFieldLooseKey.js\";import{drawGraphic}from\"../evaluator/graphics\";var _program=/*#__PURE__*/_classPrivateFieldLooseKey(\"program\");var _intervalID=/*#__PURE__*/_classPrivateFieldLooseKey(\"intervalID\");var _keyListener=/*#__PURE__*/_classPrivateFieldLooseKey(\"keyListener\");export class Simulator{constructor(){Object.defineProperty(this,_program,{writable:true,value:void 0});Object.defineProperty(this,_intervalID,{writable:true,value:void 0});Object.defineProperty(this,_keyListener,{writable:true,value:void 0});}setProgram(program){_classPrivateFieldLooseBase(this,_program)[_program]=program;}run(){this.stop();_classPrivateFieldLooseBase(this,_program)[_program].runAll();const evaluator=_classPrivateFieldLooseBase(this,_program)[_program].evaluator;let t=0;_classPrivateFieldLooseBase(this,_intervalID)[_intervalID]=setInterval(()=>{t+=1000/24;for(const component of evaluator.components){component.tick();}for(const component of evaluator.components){// TODO: Dynamic typecheck!\nconst graphic=component.draw();if(!graphic)continue;const canvas=document.querySelector(\".output-area canvas\");if(canvas){var _getContext,_ref;const ctx=(_getContext=(_ref=canvas).getContext)===null||_getContext===void 0?void 0:_getContext.call(_ref,\"2d\");if(ctx)drawGraphic(ctx,graphic);}}},1000/60);_classPrivateFieldLooseBase(this,_keyListener)[_keyListener]=event=>{for(const component of evaluator.components){component.handleKeypress(event.key);}};document.addEventListener(\"keydown\",_classPrivateFieldLooseBase(this,_keyListener)[_keyListener]);}stop(){clearInterval(_classPrivateFieldLooseBase(this,_intervalID)[_intervalID]);document.removeEventListener(\"keydown\",_classPrivateFieldLooseBase(this,_keyListener)[_keyListener]);}}","map":{"version":3,"names":["drawGraphic","_program","_classPrivateFieldLooseKey","_intervalID","_keyListener","Simulator","constructor","Object","defineProperty","writable","value","setProgram","program","_classPrivateFieldLooseBase","run","stop","runAll","evaluator","t","setInterval","component","components","tick","graphic","draw","canvas","document","querySelector","_getContext","_ref","ctx","getContext","call","event","handleKeypress","key","addEventListener","clearInterval","removeEventListener"],"sources":["/Users/hamzashahzad/Desktop/resume_projects/sparkground/src/simulator/simulate.ts"],"sourcesContent":["import { GraphicValue, drawGraphic } from \"../evaluator/graphics\";\nimport { Program } from \"./program\";\n\nexport class Simulator {\n  #program: Program;\n\n  #intervalID: ReturnType<typeof setInterval>;\n  #keyListener: Parameters<typeof document.addEventListener>[1];\n\n  setProgram(program: Program) {\n    this.#program = program;\n  }\n\n  run() {\n    this.stop();\n\n    this.#program.runAll();\n    const evaluator = this.#program.evaluator;\n\n    let t = 0;\n\n    this.#intervalID = setInterval(() => {\n      t += 1000 / 24;\n\n      for (const component of evaluator.components) {\n        component.tick();\n      }\n\n      for (const component of evaluator.components) {\n        // TODO: Dynamic typecheck!\n        const graphic = component.draw() as GraphicValue;\n        if (!graphic) continue;\n\n        const canvas = document.querySelector(\".output-area canvas\");\n        if (canvas) {\n          const ctx = (canvas as HTMLCanvasElement).getContext?.(\"2d\");\n          if (ctx) drawGraphic(ctx, graphic);\n        }\n      }\n    }, 1000 / 60);\n\n    this.#keyListener = (event: KeyboardEvent) => {\n      for (const component of evaluator.components) {\n        component.handleKeypress(event.key);\n      }\n    };\n    document.addEventListener(\"keydown\", this.#keyListener);\n  }\n\n  stop() {\n    clearInterval(this.#intervalID);\n    document.removeEventListener(\"keydown\", this.#keyListener);\n  }\n}\n"],"mappings":"4UAAA,OAAuBA,WAAW,KAAQ,uBAAuB,CAAC,IAAAC,QAAA,cAAAC,0BAAA,gBAAAC,WAAA,cAAAD,0BAAA,mBAAAE,YAAA,cAAAF,0BAAA,gBAGlE,MAAO,MAAM,CAAAG,SAAU,CAAAC,YAAA,EAAAC,MAAA,CAAAC,cAAA,MAAAP,QAAA,EAAAQ,QAAA,MAAAC,KAAA,UAAAH,MAAA,CAAAC,cAAA,MAAAL,WAAA,EAAAM,QAAA,MAAAC,KAAA,UAAAH,MAAA,CAAAC,cAAA,MAAAJ,YAAA,EAAAK,QAAA,MAAAC,KAAA,WAMrBC,UAAUA,CAACC,OAAgB,CAAE,CAC3BC,2BAAA,KAAI,CAAAZ,QAAA,EAAAA,QAAA,EAAYW,OAAO,CACzB,CAEAE,GAAGA,CAAA,CAAG,CACJ,IAAI,CAACC,IAAI,CAAC,CAAC,CAEXF,2BAAA,KAAI,CAAAZ,QAAA,EAAAA,QAAA,EAAUe,MAAM,CAAC,CAAC,CACtB,KAAM,CAAAC,SAAS,CAAGJ,2BAAA,KAAI,CAAAZ,QAAA,EAAAA,QAAA,EAAUgB,SAAS,CAEzC,GAAI,CAAAC,CAAC,CAAG,CAAC,CAETL,2BAAA,KAAI,CAAAV,WAAA,EAAAA,WAAA,EAAegB,WAAW,CAAC,IAAM,CACnCD,CAAC,EAAI,IAAI,CAAG,EAAE,CAEd,IAAK,KAAM,CAAAE,SAAS,GAAI,CAAAH,SAAS,CAACI,UAAU,CAAE,CAC5CD,SAAS,CAACE,IAAI,CAAC,CAAC,CAClB,CAEA,IAAK,KAAM,CAAAF,SAAS,GAAI,CAAAH,SAAS,CAACI,UAAU,CAAE,CAC5C;AACA,KAAM,CAAAE,OAAO,CAAGH,SAAS,CAACI,IAAI,CAAC,CAAiB,CAChD,GAAI,CAACD,OAAO,CAAE,SAEd,KAAM,CAAAE,MAAM,CAAGC,QAAQ,CAACC,aAAa,CAAC,qBAAqB,CAAC,CAC5D,GAAIF,MAAM,CAAE,KAAAG,WAAA,CAAAC,IAAA,CACV,KAAM,CAAAC,GAAG,EAAAF,WAAA,CAAG,CAAAC,IAAA,CAACJ,MAAM,EAAuBM,UAAU,UAAAH,WAAA,iBAAxCA,WAAA,CAAAI,IAAA,CAAAH,IAAA,CAA2C,IAAI,CAAC,CAC5D,GAAIC,GAAG,CAAE9B,WAAW,CAAC8B,GAAG,CAAEP,OAAO,CAAC,CACpC,CACF,CACF,CAAC,CAAE,IAAI,CAAG,EAAE,CAAC,CAEbV,2BAAA,KAAI,CAAAT,YAAA,EAAAA,YAAA,EAAiB6B,KAAoB,EAAK,CAC5C,IAAK,KAAM,CAAAb,SAAS,GAAI,CAAAH,SAAS,CAACI,UAAU,CAAE,CAC5CD,SAAS,CAACc,cAAc,CAACD,KAAK,CAACE,GAAG,CAAC,CACrC,CACF,CAAC,CACDT,QAAQ,CAACU,gBAAgB,CAAC,SAAS,CAAAvB,2BAAA,CAAE,IAAI,CAAAT,YAAA,EAAAA,YAAA,CAAa,CAAC,CACzD,CAEAW,IAAIA,CAAA,CAAG,CACLsB,aAAa,CAAAxB,2BAAA,CAAC,IAAI,CAAAV,WAAA,EAAAA,WAAA,CAAY,CAAC,CAC/BuB,QAAQ,CAACY,mBAAmB,CAAC,SAAS,CAAAzB,2BAAA,CAAE,IAAI,CAAAT,YAAA,EAAAA,YAAA,CAAa,CAAC,CAC5D,CACF","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}