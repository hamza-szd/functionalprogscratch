{"ast":null,"code":"import _classPrivateFieldLooseBase from\"/Users/hamzashahzad/Desktop/resume_projects/sparkground/node_modules/@babel/runtime/helpers/esm/classPrivateFieldLooseBase.js\";import _classPrivateFieldLooseKey from\"/Users/hamzashahzad/Desktop/resume_projects/sparkground/node_modules/@babel/runtime/helpers/esm/classPrivateFieldLooseKey.js\";import{cloneDeep}from\"lodash\";var _bindings=/*#__PURE__*/_classPrivateFieldLooseKey(\"bindings\");var _computed=/*#__PURE__*/_classPrivateFieldLooseKey(\"computed\");var _computing=/*#__PURE__*/_classPrivateFieldLooseKey(\"computing\");export class Defines{constructor(){Object.defineProperty(this,_bindings,{writable:true,value:{}});Object.defineProperty(this,_computed,{writable:true,value:{}});Object.defineProperty(this,_computing,{writable:true,value:new Set()});this.clear();}clear(){_classPrivateFieldLooseBase(this,_bindings)[_bindings]={};_classPrivateFieldLooseBase(this,_computed)[_computed]={};_classPrivateFieldLooseBase(this,_computing)[_computing]=new Set();}clearComputed(){_classPrivateFieldLooseBase(this,_computed)[_computed]={};}addAll(entries){for(const[identifier,compute]of entries){this.add(identifier,compute);}}add(identifier,compute,attributes){this.addBinding({name:identifier,cell:{value:compute},attributes});}addBinding(binding){_classPrivateFieldLooseBase(this,_bindings)[_bindings][binding.name]=binding;}has(identifier){return identifier in _classPrivateFieldLooseBase(this,_bindings)[_bindings];}binding(name){return cloneDeep(_classPrivateFieldLooseBase(this,_bindings)[_bindings][name]);}environment(){return cloneDeep(_classPrivateFieldLooseBase(this,_bindings)[_bindings]);}*get(name){if(!(name in _classPrivateFieldLooseBase(this,_computed)[_computed])){if(_classPrivateFieldLooseBase(this,_computing)[_computing].has(name)){console.error(`Circular dependency for defined name: '${name}'`);return\"circular\";}if(!(name in _classPrivateFieldLooseBase(this,_bindings)[_bindings]))return undefined;const binding=_classPrivateFieldLooseBase(this,_bindings)[_bindings][name];const compute=binding.cell.value;_classPrivateFieldLooseBase(this,_computing)[_computing].add(name);try{_classPrivateFieldLooseBase(this,_computed)[_computed][name]=yield*compute();}finally{_classPrivateFieldLooseBase(this,_computing)[_computing].delete(name);}}return _classPrivateFieldLooseBase(this,_computed)[_computed][name];}names(){return Object.keys(_classPrivateFieldLooseBase(this,_bindings)[_bindings]);}computeAll(){this.names().forEach(name=>this.get(name));}}","map":{"version":3,"names":["cloneDeep","_bindings","_classPrivateFieldLooseKey","_computed","_computing","Defines","constructor","Object","defineProperty","writable","value","Set","clear","_classPrivateFieldLooseBase","clearComputed","addAll","entries","identifier","compute","add","attributes","addBinding","name","cell","binding","has","environment","get","console","error","undefined","delete","names","keys","computeAll","forEach"],"sources":["/Users/hamzashahzad/Desktop/resume_projects/sparkground/src/evaluator/defines.ts"],"sourcesContent":["import { cloneDeep } from \"lodash\";\nimport { Binding, BindingAttributes, Cell, Environment } from \"../editor/library/environments\";\nimport { EvalStateGenerator } from \"./evaluate\";\nimport { Value } from \"./value\";\n\nexport class Defines {\n  #bindings: Environment<() => EvalStateGenerator<Cell<Value>>> = {};\n  #computed: Record<string, Cell<Value>> = {};\n  #computing: Set<string> = new Set();\n\n  constructor() {\n    this.clear();\n  }\n\n  clear(): void {\n    this.#bindings = {};\n    this.#computed = {};\n    this.#computing = new Set();\n  }\n\n  clearComputed(): void {\n    this.#computed = {};\n  }\n\n  addAll(entries: [identifier: string, compute: () => EvalStateGenerator<Cell<Value>>][]): void {\n    for (const [identifier, compute] of entries) {\n      this.add(identifier, compute);\n    }\n  }\n\n  add(\n    identifier: string,\n    compute: () => EvalStateGenerator<Cell<Value>>,\n    attributes?: BindingAttributes,\n  ): void {\n    this.addBinding({ name: identifier, cell: { value: compute }, attributes });\n  }\n\n  addBinding(binding: Binding<() => EvalStateGenerator<Cell<Value>>>): void {\n    this.#bindings[binding.name] = binding;\n  }\n\n  has(identifier: string): boolean {\n    return identifier in this.#bindings;\n  }\n\n  binding(name: string): Binding<() => EvalStateGenerator<Cell<Value>>> | undefined {\n    return cloneDeep(this.#bindings[name]);\n  }\n\n  environment(): Environment<() => EvalStateGenerator<Cell<Value>>> {\n    return cloneDeep(this.#bindings);\n  }\n\n  *get(name: string): EvalStateGenerator<Cell<Value> | undefined | \"circular\"> {\n    if (!(name in this.#computed)) {\n      if (this.#computing.has(name)) {\n        console.error(`Circular dependency for defined name: '${name}'`);\n        return \"circular\";\n      }\n\n      if (!(name in this.#bindings)) return undefined;\n      const binding = this.#bindings[name]!;\n      const compute = binding.cell.value!;\n\n      this.#computing.add(name);\n      try {\n        this.#computed[name] = yield* compute();\n      } finally {\n        this.#computing.delete(name);\n      }\n    }\n\n    return this.#computed[name];\n  }\n\n  names(): string[] {\n    return Object.keys(this.#bindings);\n  }\n\n  computeAll(): void {\n    this.names().forEach((name) => this.get(name));\n  }\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}